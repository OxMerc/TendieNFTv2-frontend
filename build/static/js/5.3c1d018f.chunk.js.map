{"version":3,"sources":["hooks/useAPIBackend.ts","views/Home/components/AboutSection/index.tsx","components/Spinner/index.tsx","hooks/useRefresh.ts","views/Home/components/StorySection/index.tsx","views/Home/components/PreviewSection/index.tsx","config/constants/tendieConstants.ts","views/Home/components/Art.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","hooks/useTheme.ts","components/ConnectWalletButton.tsx","views/Home/components/Hero.tsx","views/Home/components/IconCard.tsx","views/Home/components/TeamSection/index.tsx","views/Home/components/Footer.tsx","views/Home/components/Topbar.tsx","views/Home/index.tsx"],"names":["useTimer","useState","leftLaunchTime","setLeftLaunchTime","presaleLaunchTime","setPresaleLaunchTime","clock","setClock","useEffect","intervalId","setInterval","a","currentTimeStamp","Date","now","leftLaunchTimeAmount","msToTime","leftPresaleTimeAmount","clearInterval","duration","seconds","Math","floor","minutes","hours","zhours","zminutes","zseconds","StyledButton","styled","Button","Stats","t","useTranslation","waitTx","setWaitTx","account","useWeb3React","nftContractAddress","getNftContract","nftContractInstance","useNftContract","onMint","global","console","log","setBaseURI","from","error","message","justifyContent","alignItems","flexDirection","textAlign","scale","color","mb","style","padding","flexWrap","bold","fontSize","onClick","isLive","rotate","keyframes","LogoSvg","img","SpinWrapper","div","StyledText","Text","TxSpinner","src","window","location","origin","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","marginTop","keys","previewNFTs","map","previewNFT","idx","artData","path","description","lang1","lang2","Art","margin","className","alt","sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","useTheme","useThemeManager","toggleTheme","StyledThemeContext","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","fading","StyledConnectWalletButton","Hero","position","flex","mr","StyledCard","Card","md","rotation","StyledCardBody","CardBody","bgSrc","IconWrapper","IconCard","icon","borderColor","bgPath","title","borderBackground","TransparentFrame","PredictionCardData","WinSection","m","pr","maxWidth","Footer","mt","Topbar","section","setSection","display","role","spy","smooth","offset","to","StyledHeroSection","Home","HomeSectionContainerStyles","AboutSection","StorySection","PreviewSection","TeamSection"],"mappings":"sNA8CaA,G,qBAAW,WACpB,MAA6CC,mBAAS,IAAtD,mBAAQC,EAAR,KAAwBC,EAAxB,KACA,EAAmDF,mBAAS,IAA5D,mBAAQG,EAAR,KAA2BC,EAA3B,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,qBAAU,WAGN,IAAMC,EAAaC,YAAW,sBAAC,gCAAAC,EAAA,sDACrBC,EAAmBC,KAAKC,MACxBC,EAAuBC,EAZjB,WAY6CJ,GACnDK,EAAwBD,EAdjB,UAc8CJ,GAE3DT,EAAkBY,GAClBV,EAAqBY,GAErBV,EAASD,EAAQ,GARU,2CAS5B,KAEH,OAAO,kBAAMY,cAAcT,MAC5B,CAACH,IAEG,CAAEJ,iBAAgBE,uBAGvBY,EAAW,SAACG,GACd,GAAGA,EAAW,EAAG,MAAO,OACxB,IAAMC,EAAUC,KAAKC,MAAOH,EAAW,IAAQ,IACzCI,EAAUF,KAAKC,MAAOH,EAAQ,IAAkB,IAChDK,EAAQH,KAAKC,MAAOH,EAAQ,KAAuB,IAEnDM,EAAUD,EAAQ,GAAT,WAAmBA,GAAUA,EACtCE,EAAYH,EAAU,GAAX,WAAqBA,GAAYA,EAC5CI,EAAYP,EAAU,GAAX,WAAqBA,GAAYA,EAElD,MAAM,GAAN,OAAUK,EAAV,cAAsBC,EAAtB,cAAoCC,EAApC,S,gMCrEEC,EAAeC,YAAOC,IAAPD,CAAH,yHA6FHE,IAtFD,WACZ,IAAQC,EAAMC,cAAND,EACR,EAA4B/B,oBAAS,GAArC,mBAAOiC,EAAP,KAAeC,EAAf,KAEQC,EAAYC,cAAZD,QACFE,EAAqBC,cACrBC,EAAsBC,YAAeH,GAE3C,EAA6CtC,cAArCE,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,kBAElBsC,EAAM,uCAAG,sBAAA/B,EAAA,6DACbwB,GAAU,GADG,SAGK,uDAChBQ,EAAOC,QAAQC,IAAIL,GAJR,SAMLA,EAAoBM,WAHV,uDAKd,CACEC,KAAOX,IATA,uDAcXO,EAAOC,QAAQI,MAAM,KAAMC,SAdhB,QAgBbd,GAAU,GAhBG,yDAAH,qDAmBZ,OACE,eAAC,IAAD,CAAMe,eAAe,SAASC,WAAW,SAASC,cAAc,SAAhE,UACE,cAAC,IAAD,CAASC,UAAU,SAASC,MAAM,KAAKC,MAAM,UAAUC,GAAG,OAA1D,yBAGA,eAAC,IAAD,CAAMJ,cAAe,CAAC,SAAU,KAAM,KAAM,OAA5C,UACE,sBAAKK,MAAO,CAAEC,QAAS,QAAvB,UACE,cAAC,IAAD,CAAML,UAAU,SAASE,MAAM,UAA/B,SACGvB,EAAE,4FAEL,cAAC,IAAD,CAAM2B,SAAS,OAAf,SACE,cAAC,IAAD,CAAMN,UAAU,SAASE,MAAM,UAAUC,GAAG,OAA5C,+wBAKJ,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAAC,IAAD,CAAML,UAAU,SAASE,MAAM,UAA/B,SACGvB,EAAE,kQAEL,cAAC,IAAD,CAAM2B,SAAS,OAAf,SACE,cAAC,IAAD,CAAMN,UAAU,SAASE,MAAM,UAAUC,GAAG,OAA5C,uhEAON,cAAC,IAAD,CAAMH,UAAU,SAASE,MAAM,UAAUK,MAAI,EAACJ,GAAG,OAAjD,SACGxB,EAAE,yBAGmB,SAAtB5B,GACA,gCACE,cAAC,IAAD,CAAMiD,UAAU,SAASQ,SAAS,OAAOD,MAAI,EAACL,MAAM,UAApD,mCACA,eAAC,IAAD,CAAMF,UAAU,SAASQ,SAAS,OAAON,MAAM,MAAMK,MAAI,EAAzD,cAA4DxD,EAA5D,UAKoB,SAAtBA,GAAmD,SAAnBF,GAChC,gCACE,cAAC,IAAD,CAAMmD,UAAU,SAASQ,SAAS,OAAOD,MAAI,EAACL,MAAM,UAApD,yDACA,eAAC,IAAD,CAAMF,UAAU,SAAQQ,SAAS,OAAON,MAAM,MAAMK,MAAI,EAAxD,cAA2D1D,EAA3D,UAKF,cAAC0B,EAAD,CAAckC,QAASpB,EAAvB,kBAIF,cAAC,IAAD,CAAWqB,OAAQ7B,U,qGC/FnB8B,EAASC,YAAH,sHASCC,EAAUrC,IAAOsC,IAAV,8JAKHH,GAGXI,EAAcvC,IAAOwC,IAAV,qWAqBXC,EAAazC,YAAO0C,IAAP1C,CAAH,6CAiBD2C,IAbG,SAAC,GACf,OAD8B,EAAbT,OAGT,eAACK,EAAD,WAEI,cAACF,EAAD,CAASO,IAAKC,OAAOC,SAASC,OAhD7B,8BAiDD,cAACN,EAAD,CAAYf,MAAM,WAAlB,4CAGN,+B,iCCxDV,oBAQesB,IALI,WACjB,MAAuBC,qBAAWC,KAClC,MAAO,CAAEC,YADT,EAAQC,KACoBC,YAD5B,EAAcC,Q,wJCQKtD,YAAOC,IAAPD,CAAH,yHAqDHE,IA9CD,WACEE,cAAND,EAAR,IACA,EAA4B/B,oBAAS,GAArC,mBAGMqC,GAHN,UAEoBD,cAAZD,QACmBG,eAG3B,GAF4BE,YAAeH,GAEEtC,eAA7C,EAAQE,eAAR,EAAwBE,kBAqBxB,OACE,eAAC,IAAD,CAAM8C,eAAe,SAASC,WAAW,SAASC,cAAc,SAAhE,UACE,cAAC,IAAD,CAASC,UAAU,SAASC,MAAM,KAAKC,MAAM,UAAUC,GAAG,OAA1D,0BAGA,eAAC,IAAD,CAAMJ,cAAe,CAAC,SAAU,KAAM,KAAM,OAA5C,UACE,sBAAKK,MAAO,CAAE2B,UAAW,OAAQ/B,UAAW,SAAUK,QAAS,QAA/D,qKAC4J,uBAAM,uBADlK,sGAC2Q,uBAAM,uBADjR,0EAC8V,uBAAM,uBADpW,6GACsd,+BAAM,8CAAyB,0BAErf,sBAAKD,MAAO,CAAE2B,UAAW,OAAQ/B,UAAW,SAAUK,QAAS,QAA/D,oYACmE,uBAAM,uBADzE,6RAC8H,uBAAM,uBADpI,kMAC8K,uBAAM,uBADpL,gSAC4O,+BAAM,8CAAyB,mC,4LC5C9P7B,YAAOC,IAAPD,CAAH,yHAmDHE,IA5CD,WACEE,cAAND,EAAR,IACA,EAA4B/B,oBAAS,GAArC,mBAGMqC,GAHN,UAEoBD,cAAZD,QACmBG,eAG3B,GAF4BE,YAAeH,GAEEtC,eAqBvCqF,GArBN,EAAQnF,eAAR,EAAwBE,kBAqBX,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACnC,OACE,eAAC,IAAD,CAAM8C,eAAe,SAASC,WAAW,SAASC,cAAc,SAAhE,UACE,cAAC,IAAD,CAASC,UAAU,SAASC,MAAM,KAAKC,MAAM,UAAUC,GAAG,OAA1D,4BAIE8B,IAAYC,KAAI,SAACC,EAAYC,GAAb,OACd,cAAC,IAAD,CAAuBC,QAASF,GAArBH,EAAKI,a,mDC1D1B,kCAAO,IAAMH,EAAc,CACvB,CACIK,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,4WAGf,CACIH,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,4WAGf,CACIH,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,4WAGf,CACIH,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,4WAGf,CACIH,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,4WAGf,CACIH,KAAM,aACNC,YAAa,CACTC,MAAO,sIACPC,MAAO,8W,iCCxCnB,yBAkCeC,IAjBgB,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QAEhC,OACE,eAAC,IAAD,CAAMlC,GAAG,OAAOJ,cAAe,CAAC,SAAU,KAAM,KAAM,OAAtD,UACE,qBAAKK,MAAO,CAAEC,QAAS,OAAQsC,OAAQ,QAAvC,SACIN,EAAQE,YAAYC,QAExB,qBAAKpC,MAAO,CAAEC,QAAS,OAAQsC,OAAQ,QAAvC,SACIN,EAAQE,YAAYE,QAExB,qBAAKG,UAAU,WAAf,SACE,qBAAKxB,IAAG,6BAA0BiB,EAAQC,MAASO,IAAI,Y,kJCfzDC,EAAe,SAACC,EAAqBC,EAAkBC,GAAxC,OAAgEC,YAA/D,IAAD,6IAGFF,GAEH,WACZ,OAAID,EAAMI,QACO,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,QAAV,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUI,QAASN,EAAMO,OAAOC,YAE5C,OAARN,QAAQ,IAARA,OAAA,EAAAA,EAAUI,QAASN,EAAMO,OAAOC,eAQrCC,EAAmBhF,YAAOiF,IAAPjF,CAAH,sDAClB,gBAAGuE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAApB,OAAmCH,EAAaC,EAAOC,EAAUC,MACtD,kBAAgC,wBAAhC,EAAGD,SAAqD,sBAAwB,uBAGzFU,EAAkBlF,YAAOiF,IAAPjF,CAAH,sDACjB,gBAAGuE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAApB,OAAmCH,EAAaC,EAAOC,EAAUC,MACtD,kBAAgC,uBAAhC,EAAGD,SAAoD,sBAAwB,wBAGjFW,EAAkC,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAH,OAC7C,cAACS,EAAD,CAAiBT,SAAUA,EAAUD,SAAS,kBAA9C,SACE,qBAAKY,MAAM,IAAIC,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,iBAAiBC,cAAc,oBAA5C,SACE,sBAAMC,EAAE,4DAOLC,EAAqC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,SAAH,OAChD,cAACS,EAAD,CAAiBT,SAAUA,EAAUD,SAAS,qBAA9C,SACE,qBAAKY,MAAM,IAAIC,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,oBAAoBC,cAAc,oBAA/C,SACE,sBAAMC,EAAE,2DAOLE,EAAmC,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAH,OAC9C,cAACO,EAAD,CAAkBP,SAAUA,EAAUD,SAAS,mBAA/C,SACE,qBAAKY,MAAM,IAAIC,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,kBAAkBC,cAAc,oBAA7C,SACE,sBAAMC,EAAE,2DAOLG,EAAsC,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAH,OACjD,cAACO,EAAD,CAAkBP,SAAUA,EAAUD,SAAS,sBAA/C,SACE,qBAAKY,MAAM,IAAIC,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,qBAAqBC,cAAc,oBAAhD,SACE,sBAAMC,EAAE,+DChEZI,EAAU5F,IAAOwC,IAAV,kJACG,YAA6B,IAA1B+B,EAAyB,EAAzBA,MAAOsB,EAAkB,EAAlBA,YACtB,OAAItB,EAAMI,QACU,OAAXkB,QAAW,IAAXA,OAAA,EAAAA,EAAajB,QAAb,OAAqBiB,QAArB,IAAqBA,OAArB,EAAqBA,EAAahB,QAAS,QAElC,OAAXgB,QAAW,IAAXA,OAAA,EAAAA,EAAahB,SAAb,OAAsBgB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAajB,OAAQ,UAEzC,qBAAGkB,SAOVC,EAAmB/F,IAAOwC,IAAV,oIACT,qBAAGsD,MAAoB,KA+CrBE,EAxCqC,SAAC,GAO9C,IANLF,EAMI,EANJA,MACAG,EAKI,EALJA,gBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,QACA1B,EAEI,EAFJA,SACAoB,EACI,EADJA,YAEMO,EAAoC,QAApBH,IAA8BE,EAC9CE,EAAuC,WAApBJ,IAAiCE,EACpDG,EAAqC,QAApBL,GAA6BE,EAC9CI,EAAwC,WAApBN,GAAgCE,EAoB1D,OACE,eAACP,EAAD,CAASE,MAAOA,EAAOD,YAAaA,EAApC,UACGK,GAAoB,cAACH,EAAD,CAAkBD,MAAOA,EAAzB,SAAiCI,IAlBtD,qCACGI,GAAkB,cAAC,EAAD,CAAY7B,SAAUA,IACxC8B,GAAqB,cAAC,EAAD,CAAe9B,SAAUA,OAOjD,qCACG2B,GAAiB,cAAC,EAAD,CAAW3B,SAAUA,IACtC4B,GAAoB,cAAC,EAAD,CAAc5B,SAAUA,W,8KCxC/C+B,EAAkBxG,YAAOyG,IAAPzG,CAAH,4JAIR,qBAAG8F,MAAoB,KACpB,gBAAGf,EAAH,EAAGA,WAAYR,EAAf,EAAeA,MAAf,OAA2BQ,GAAcR,EAAMO,OAAOC,cACzD,mBAAoB2B,EAApB,EAAGA,iBAGVC,EAAkB3G,YAAO4G,IAAP5G,CAAH,sOAKjB,qBAAGuE,MAAkBsC,aAAaC,MAKlC,qBAAGvC,MAAkBsC,aAAaE,MAsEvBC,EAhEiC,SAAC,GAc1C,IAbLC,EAaI,EAbJA,SACAlC,EAYI,EAZJA,WACAmC,EAWI,EAXJA,QAWI,IAVJpB,aAUI,MAVI,EAUJ,EATJI,EASI,EATJA,iBASI,IARJD,uBAQI,MARc,SAQd,MAPJkB,wBAOI,aANJC,sBAMI,SALJ3C,EAKI,EALJA,SACAoB,EAII,EAJJA,YACAwB,EAGI,EAHJA,eACAC,EAEI,EAFJA,WACGC,EACC,iBAmBJ,OACE,eAAC,IAAD,2BAASF,GAAT,cACGF,GAAwC,QAApBlB,GACnB,cAAC,EAAD,CACEiB,QAASA,EACTpB,MAAOA,EACPK,QAASiB,EACTnB,gBAAiBA,EACjBC,iBAAkBA,EAClBzB,SAAUA,EACVoB,YAAaA,IAGjB,cAACW,EAAD,yBAAiBzB,WAAYA,EAAYe,MAAOA,EAAOY,WA/BxC,WAEjB,OAAKS,EAKmB,WAApBlB,EACK,cAIe,QAApBA,EACK,cAEF,SAZE,WA4B4EsB,GAAnF,aACE,cAACZ,EAAD,2BAAqBW,GAArB,aAAkCL,QAEnCE,GAAwC,WAApBlB,GACnB,cAAC,EAAD,CACEiB,QAASA,EACTpB,MAAOA,EACPK,QAASiB,EACTnB,gBAAiBA,EACjBC,iBAAkBA,EAClBzB,SAAUA,EACVoB,YAAaA,S,iBCjGR2B,EANE,WACf,MAA8BC,cAA9B,mBAAO9C,EAAP,KAAe+C,EAAf,KAEA,MAAO,CAAE/C,SAAQJ,MADHtB,qBAAW0E,KACDD,gB,0BCUXE,EAZa,SAACL,GAC3B,IAAQpH,EAAMC,cAAND,EACR,EAA0B0H,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,YAAeH,EAAOC,EAAQ5H,GAAxD6H,sBAER,OACE,cAAC,IAAD,yBAAQ/F,QAAS+F,GAA2BT,GAA5C,aACGpH,EAAE,sBCUH+H,EAAS,kBAAM9F,YAAL,MAAD,4HAYT+F,EAA4BnI,YAAO4H,EAAP5H,CAAH,6GAoGhBoI,IA9FMpI,IAAOwC,IAAV,yFA9BC,kBAAMJ,YAAL,MAAD,mLAmCEpC,IAAOwC,IAAV,0XAMD0F,EAKAA,EAKAA,GAiBJ,WACX,IAAQ/H,EAAMC,cAAND,EACAI,EAAYC,cAAZD,QAGR,OACE,qCAME,cAAC,IAAD,CAASkB,MAAM,MAAMC,MAAM,UAAUC,GAAG,OAAxC,SACGxB,EAAE,qBAEL,cAAC,IAAD,CACEkI,SAAS,WACT9G,cAAe,CAAC,iBAAkB,KAAM,KAAM,OAC9CD,WAAY,CAAC,WAAY,KAAM,KAAM,UACrCD,eAAe,SAJjB,SAME,eAAC,IAAD,CAAMiH,KAAK,IAAI/G,cAAc,SAA7B,UACE,cAAC,IAAD,CAASE,MAAM,MAAMC,MAAM,QAAQC,GAAG,OAAtC,SACGxB,EAAE,wBAEL,cAAC,IAAD,CAASsB,MAAM,KAAKE,GAAG,OAAOD,MAAM,UAApC,SACGvB,EAAE,+DAEL,cAAC,IAAD,WACII,GAAW,cAAC4H,EAAD,CAA2BI,GAAG,oB,kGCvGjDC,GAAaxI,YAAOyI,IAAPzI,CAAH,0JAMZ,qBAAGuE,MAAkBsC,aAAa6B,MAChC,gBAAGC,EAAH,EAAGA,SAAH,OAAmBA,EAAQ,4BAAwBA,EAAxB,MAAuC,MAIlEC,GAAiB5I,YAAO6I,IAAP7I,CAAH,8GAGK,SAAAuH,GAAK,OAAIA,EAAMuB,SAGlCC,GAAc/I,YAAOiF,IAAPjF,CAAH,0GAKb,qBAAGuE,MAAkBsC,aAAa6B,MAChC,gBAAGC,EAAH,EAAGA,SAAH,OAAmBA,EAAQ,4BAAwBA,EAAxB,MAAuC,MAmCzDK,GAhB2B,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,KAAMlE,EAA2E,EAA3EA,WAAYmE,EAA+D,EAA/DA,YAAaP,EAAkD,EAAlDA,SAAUQ,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,MAAOnC,EAAyB,EAAzBA,SAAaM,EAAY,kBAC5H,OACE,eAACiB,GAAD,yBAAYzD,WAAYA,EAAYsE,iBAAkBH,EAAaP,SAAUA,GAAcpB,GAA3F,cACE,cAACqB,GAAD,CAAgBE,MAAK,UALT,uBAKS,OAAkBK,EAAlB,SAArB,SACE,cAACJ,GAAD,CAAaJ,SAAUA,EAAvB,SAAkCM,MAEpC,eAAC,IAAD,WACE,cAAC,IAAD,CAAMvH,MAAM,UAAUK,MAAI,EAACC,SAAS,OAApC,SACIoH,IAEHnC,UChDHqC,GAAmBtJ,IAAOwC,IAAV,yNAQlB,qBAAG+B,MAAkBsC,aAAa6B,MAKhCa,GAAmC,CACvCN,KAAM,cAAC,IAAD,CAAkB7D,MAAM,OAAO1D,MAAM,gBAC3CqD,WAAY,qDACZmE,YAAa,UACbP,SAAU,QAyFGa,GAtFI,WACjB,IAAQjF,EAAUiD,IAAVjD,MAER,OACE,mCACE,cAAC+E,GAAD,CAAkB3E,OAAQJ,EAAMI,OAAhC,SACE,eAAC,IAAD,CAAMpD,cAAc,SAASD,WAAW,SAASD,eAAe,SAAhE,UACE,cAAC,IAAD,CAASG,UAAU,SAASC,MAAM,KAAKC,MAAM,UAAUC,GAAG,OAA1D,yBAGA,eAAC,IAAD,CAAM8H,EAAE,IAAIC,GAAG,OAAO/H,GAAG,OAAOJ,cAAe,CAAC,SAAU,KAAM,KAAM,OAAQoI,SAAS,SAASrI,WAAW,SAA3G,UACE,cAAC,IAAD,CACEgH,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAkCJ,OAAO,UAAUC,MAAM,KAAzD,uCAE4B,uBAF5B,iFAKF,cAAC,IAAD,CACEd,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAkCJ,OAAO,UAAUC,MAAM,KAAzD,yCAE8B,uBAF9B,2EAKF,cAAC,IAAD,CACEd,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAkCJ,OAAO,UAAUC,MAAM,UAAzD,6CAEkC,uBAFlC,yGAMJ,eAAC,IAAD,CAAMK,EAAE,IAAIC,GAAG,OAAOnI,cAAe,CAAC,SAAU,KAAM,KAAM,OAAQoI,SAAS,SAASrI,WAAW,SAAjG,UACE,cAAC,IAAD,CACEgH,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAkCJ,OAAO,UAAUC,MAAM,eAAzD,6BAEkB,uBAFlB,iCAKF,cAAC,IAAD,CACEd,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAmCJ,OAAO,UAAUC,MAAM,aAA1D,6BAEkB,uBAFlB,2EAKF,cAAC,IAAD,CACEd,KAAK,IACLqB,SAAU,CAAC,QAAS,KAAM,KAAM,QAChCpB,GAAI,CAAC,KAAM,KAAM,KAAM,QACvB5G,GAAI,CAAC,OAAQ,KAAM,KAAM,KAJ3B,SAME,eAAC,GAAD,2BAAc4H,IAAd,IAAmCJ,OAAO,UAAUC,MAAM,YAA1D,iCAEsB,uBAFtB,gF,UC/FRjB,GAA4BnI,YAAO4H,EAAP5H,CAAH,oGAMzB4F,GAAU5F,YAAOyG,IAAPzG,CAAH,sKA6BE4J,GApBA,WACb,IAAQzJ,EAAMC,cAAND,EACAI,EAAYC,cAAZD,QAER,OACE,mCACE,eAAC,GAAD,WACE,cAAC,IAAD,CAASoB,GAAG,OAAOF,MAAM,KAAKC,MAAM,QAApC,SACGvB,EAAE,sBAEL,cAAC,IAAD,CAAMqB,UAAU,SAASE,MAAM,QAA/B,SACGvB,EAAE,mFAGHI,GAAW,cAAC,GAAD,CAA2BsJ,GAAG,e,UC/B7CjE,GAAU5F,YAAOyG,IAAPzG,CAAH,qLA2BE8J,GAhBA,WACb,MAA8B1L,mBAAS,QAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KAEA,OACE,cAAC,GAAD,CAASpI,MAAO,CAAEqI,QAAS,OAA3B,SACE,sBAAKC,KAAK,aAAa9F,UAAU,sBAAjC,UACE,cAAC,QAAD,CAAM+F,KAAG,EAACC,QAAM,EAACC,QAAS,GAAI/K,SAAU,IAAKgL,GAAG,OAAOlG,UAAS,8BAAqC,SAAZ2F,EAAqB,aAAe,IAAM9H,QAAS,kBAAM+H,EAAW,SAA7J,kBACA,cAAC,QAAD,CAAMG,KAAG,EAACC,QAAM,EAACC,QAAS,GAAI/K,SAAU,IAAKgL,GAAG,QAAQlG,UAAS,8BAAqC,UAAZ2F,EAAsB,aAAe,IAAM9H,QAAS,kBAAM+H,EAAW,UAA/J,mBACA,cAAC,QAAD,CAAMG,KAAG,EAACC,QAAM,EAACC,QAAS,GAAI/K,SAAU,IAAKgL,GAAG,QAAQlG,UAAS,8BAAqC,UAAZ2F,EAAsB,aAAe,IAAM9H,QAAS,kBAAM+H,EAAW,UAA/J,mBACA,cAAC,QAAD,CAAMG,KAAG,EAACC,QAAM,EAACC,QAAS,GAAI/K,SAAU,IAAKgL,GAAG,UAAUlG,UAAS,8BAAqC,YAAZ2F,EAAwB,aAAe,IAAM9H,QAAS,kBAAM+H,EAAW,YAAnK,qBACA,cAAC,QAAD,CAAMG,KAAG,EAACC,QAAM,EAACC,QAAS,GAAI/K,SAAU,IAAKgL,GAAG,OAAOlG,UAAS,8BAAqC,SAAZ2F,EAAqB,aAAe,IAAM9H,QAAS,kBAAM+H,EAAW,SAA7J,wBCTFO,GAAoBvK,YAAOgH,EAAPhH,CAAH,wLAMnB,qBAAGuE,MAAkBsC,aAAa6B,MA6FvB8B,UAxFQ,WACrB,IAAQjG,EAAUiD,IAAVjD,MAGFkG,EAA6B,CAAEtG,OAAQ,IAAKiB,MAAO,OAAQuE,SAAU,SAE3E,OACE,qCACE,cAAC,GAAD,IACA,cAACY,GAAD,CACEjD,WAAY,CAAE1F,MAAO,CAAEuC,OAAQ,OAAQiB,MAAO,SAC9CU,MAAO,EACPqB,kBAAkB,EAClB7B,GAAG,OAJL,SAME,cAAC,GAAD,MAEF,cAAC,EAAD,CACEgC,WAAY,CAAE1F,MAAO6I,GACrB1F,WACER,EAAMI,OACF,oDACA,oDAENmB,MAAO,EACPqB,kBAAkB,EAClB7B,GAAG,QATL,SAYE,cAACoF,GAAA,EAAD,MAEF,cAAC,EAAD,CACEpD,WAAY,CAAE1F,MAAO6I,GACrB1F,WACER,EAAMI,OACF,oDACA,oDAENmB,MAAO,EACPqB,kBAAkB,EAClB7B,GAAG,QATL,SAYE,cAACqF,GAAA,EAAD,MAEF,cAAC,EAAD,CACErD,WAAY,CAAE1F,MAAO6I,GACrB1F,WACER,EAAMI,OACF,oDACA,oDAENmB,MAAO,EACPqB,kBAAkB,EAClB7B,GAAG,UATL,SAWE,cAACsF,GAAA,EAAD,MAEF,cAAC,EAAD,CACEtD,WAAY,CAAE1F,MAAO6I,GACrB1F,WACER,EAAMI,OACF,oDACA,oDAENmB,MAAO,EACPqB,kBAAkB,EAClB7B,GAAG,OATL,SAYE,cAACuF,GAAD,MAEF,cAAC,EAAD,CACEvD,WAAY,CAAE1F,MAAO6I,GACrB1F,WACER,EAAMI,OACF,oDACA,kDAENmB,MAAO,EACPqB,kBAAkB,EARpB,SAUE,cAAC,GAAD","file":"static/js/5.3c1d018f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport axios from 'axios';\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const GetServerURL = () => {\r\n    const baseURL = process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_API_ENDPOINT :process.env.REACT_APP_MAIN_API_ENDPOINT;\r\n    return baseURL;\r\n}\r\n\r\nexport const useCheckWhiteList = () => {\r\n    const { account } = useWeb3React()\r\n    const { slowRefresh } = useRefresh()\r\n    const [ inWhiteList, setInWhiteList] = useState(false)\r\n    const [ nftCount, setNftCount] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchUserData = async () => {\r\n        try {\r\n            const baseURL = GetServerURL();\r\n            const res = await axios.get(`${baseURL}/validate-entry/${account}`);\r\n            global.console.log(`${baseURL}/validate-entry/${account}`)\r\n            global.console.log(res)\r\n            global.console.log(\"Millisecond\", Date.now());\r\n            if(!res.data.status) return;\r\n            setInWhiteList(res.data.whitelist);\r\n            setNftCount(res.data.nftCount);\r\n\r\n        } catch (e) {\r\n            // global.console.error(e.response.data);\r\n        }\r\n      }\r\n  \r\n      if (account) {\r\n        fetchUserData()\r\n      }\r\n    }, [account, slowRefresh])\r\n  \r\n    return { inWhiteList, nftCount }\r\n}\r\n\r\n\r\nconst presaleTimestamp = 1631115000000;\r\nconst launchTimestamp = 1631116800000;\r\n\r\nexport const useTimer = () => {\r\n    const [ leftLaunchTime, setLeftLaunchTime] = useState('');\r\n    const [ presaleLaunchTime, setPresaleLaunchTime] = useState('');\r\n    const [clock, setClock] = useState(0)\r\n\r\n    useEffect(() => {\r\n        // save intervalId to clear the interval when the\r\n        // component re-renders\r\n        const intervalId = setInterval(async () => {\r\n            const currentTimeStamp = Date.now();\r\n            const leftLaunchTimeAmount = msToTime(launchTimestamp -  currentTimeStamp);\r\n            const leftPresaleTimeAmount = msToTime(presaleTimestamp -  currentTimeStamp);\r\n\r\n            setLeftLaunchTime(leftLaunchTimeAmount);\r\n            setPresaleLaunchTime(leftPresaleTimeAmount);\r\n\r\n            setClock(clock + 1);\r\n        }, 1000);\r\n        // clear interval on re-render to avoid memory leaks\r\n        return () => clearInterval(intervalId);\r\n    }, [clock]);\r\n\r\n    return { leftLaunchTime, presaleLaunchTime};\r\n}\r\n\r\nconst msToTime = (duration) => {\r\n    if(duration < 0) return \"last\";\r\n    const seconds = Math.floor((duration / 1000) % 60);\r\n    const minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n    const hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n  \r\n    const zhours = (hours < 10) ? `0${hours}` : hours;\r\n    const zminutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n    const zseconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n  \r\n    return `${zhours} h ${zminutes} m ${zseconds} s`;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport web3 from 'web3';\r\nimport axios from 'axios';\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Text, Button, Card, CardBody, useModal, Input, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useNftContract } from 'hooks/useContract'\r\nimport { getNftContract } from 'utils/addressHelpers'\r\nimport TxSpinner from 'components/Spinner';\r\nimport { GetServerURL, useCheckWhiteList, useTimer } from 'hooks/useAPIBackend';\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 4px;\r\n  color: #f4f4f7;\r\n  max-width: 150px;\r\n  background-color: #e51717;\r\n`\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const [waitTx, setWaitTx] = useState(false);\r\n\r\n  const { account } = useWeb3React()\r\n  const nftContractAddress = getNftContract();\r\n  const nftContractInstance = useNftContract(nftContractAddress);\r\n\r\n  const { leftLaunchTime, presaleLaunchTime} = useTimer();\r\n\r\n  const onMint = async () => {\r\n    setWaitTx(true);\r\n    try {\r\n      const baseURL = \"https://chunky-metadata-api.herokuapp.com/api/token/\";\r\n      global.console.log(nftContractInstance)\r\n      \r\n      await nftContractInstance.setBaseURI(\r\n        baseURL,\r\n        {\r\n          from : account\r\n        })\r\n      \r\n\r\n    } catch( error ){\r\n      global.console.error(error.message);\r\n    }\r\n    setWaitTx(false);\r\n  }\r\n  \r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <Heading textAlign=\"center\" scale=\"xl\" color=\"#1c1c1e\" mb=\"20px\">\r\n        ABOUT&nbsp;US\r\n      </Heading>\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <div style={{ padding: '10px' }}>\r\n          <Text textAlign=\"center\" color=\"#2c2c2e\">\r\n            {t('These Chicken Chunksters were wronged by the Casino Lords in their own different ways.')}\r\n          </Text>\r\n          <Flex flexWrap=\"wrap\">\r\n            <Text textAlign=\"center\" color=\"#2c2c2e\" mb=\"20px\">\r\n              Now they are out to get back what was theirs and no obstacle is too great. KingSwap is the newest decentralized finance (DeFi) liquidity pool platform that is a further and better evolution of UniSwap. In addition to offering off-ramp fiat currency converting solutions to allow users great convenience between the fiat and cryptocurrency worlds, KingSwap is also regulated* in Singapore. KingSwap has also added some new Blockchain community-oriented features to the Uniswap&lsquo;s core design, which will help the offering to boom 💥 and provide user-friendly real-time benefits in terms of price curves and contributor rewards. Our protocol design offers to align incentives for the users by introducing strategies like pool rewards & network effects.\r\n            </Text>\r\n          </Flex>\r\n        </div>\r\n        <div style={{ padding: '10px' }}>\r\n          <Text textAlign=\"center\" color=\"#2c2c2e\">\r\n            {t('これらのチキンチャンクスターは、カジノロードによって独自の方法で不当に扱われました。')}\r\n          </Text>\r\n          <Flex flexWrap=\"wrap\">\r\n            <Text textAlign=\"center\" color=\"#2c2c2e\" mb=\"20px\">\r\n              今、彼らは彼らのものを取り戻すために出かけています、そしてどんな障害も大きすぎません。 KingSwapは、最新の分散型ファイナンス（DeFi）流動性プールプラットフォームであり、UniSwapをさらに進化させたものです。 KingSwapは、ユーザーが法定通貨と暗号通貨の世界の間で非常に便利なオフランプ法定通貨変換ソリューションを提供することに加えて、シンガポールでも規制されています*。 KingSwapはまた、Uniswapのコアデザインにいくつかの新しいBlockchainコミュニティ指向の機能を追加しました。これは、ブームの提供を支援し、価格曲線と貢献者の報酬の点でユーザーフレンドリーなリアルタイムのメリットを提供します。 私たちのプロトコル設計は、プール報酬やネットワーク効果などの戦略を導入することにより、ユーザーのインセンティブを調整することを提供します。\r\n            </Text>\r\n          </Flex>\r\n        </div>\r\n      </Flex>\r\n\r\n      <Text textAlign=\"center\" color=\"#e51717\" bold mb=\"32px\">\r\n        {t('Will you join them?')}\r\n      </Text>      \r\n      {\r\n        presaleLaunchTime !== \"last\" && \r\n        <div>\r\n          <Text textAlign=\"center\" fontSize=\"32px\" bold color=\"#1c1c1e\"> Market will open in </Text>\r\n          <Text textAlign=\"center\" fontSize=\"48px\" color=\"red\" bold> {presaleLaunchTime} </Text>\r\n        </div>\r\n      }\r\n\r\n      {\r\n        presaleLaunchTime === \"last\" && leftLaunchTime !== \"last\" && \r\n        <div>\r\n          <Text textAlign=\"center\" fontSize=\"32px\" bold color=\"#1c1c1e\"> Presale is live! Full launch will open in </Text>\r\n          <Text textAlign=\"center\"fontSize=\"48px\" color=\"red\" bold> {leftLaunchTime} </Text>\r\n        </div>\r\n      }\r\n      {\r\n        // ((inWhiteList && leftLaunchTime !== \"last\" && presaleLaunchTime === \"last\") || presaleLaunchTime === \"last\") &&\r\n        <StyledButton onClick={onMint}>\r\n          Mint\r\n        </StyledButton>\r\n      }\r\n      <TxSpinner isLive={waitTx}/>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Text } from '@pancakeswap/uikit'; \r\n\r\nconst CoinIcon = '/images/tokens/TENDIE.svg'\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LogoSvg = styled.img`\r\n    width: 64px;\r\n    height: 64px;\r\n    align-items: center;\r\n    display: inline-block;\r\n    animation: ${rotate} 2s linear infinite;\r\n`;\r\n\r\nconst SpinWrapper = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0px;\r\n    left: 0px;\r\n    background-color: #55555533;\r\n    backdrop-filter: blur(10px);\r\n    z-index: 9999999;\r\n    color: #E32E25;\r\n    font-size: bold;\r\n`;\r\n\r\n// const Span = styled.span`\r\n//   margin: 20px;\r\n// `;\r\n\r\nconst StyledText = styled(Text)`\r\n  margin: 20px;\r\n`\r\n\r\nconst TxSpinner = ({ isLive }) => {\r\n    return (\r\n        isLive ?\r\n            <SpinWrapper>\r\n              \r\n                <LogoSvg src={window.location.origin+CoinIcon}/>\r\n                <StyledText color=\"contrast\">Waiting for transaction ...</StyledText>\r\n              \r\n            </SpinWrapper>\r\n        : <></>\r\n    )\r\n}\r\n\r\nexport default TxSpinner;  ","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport web3 from 'web3';\r\nimport axios from 'axios';\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Text, Button, Card, CardBody, useModal, Input, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useNftContract } from 'hooks/useContract'\r\nimport { getNftContract } from 'utils/addressHelpers'\r\nimport TxSpinner from 'components/Spinner';\r\nimport { GetServerURL, useCheckWhiteList, useTimer } from 'hooks/useAPIBackend';\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 4px;\r\n  color: #f4f4f7;\r\n  max-width: 150px;\r\n  background-color: #e51717;\r\n`\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const [waitTx, setWaitTx] = useState(false);\r\n\r\n  const { account } = useWeb3React()\r\n  const nftContractAddress = getNftContract();\r\n  const nftContractInstance = useNftContract(nftContractAddress);\r\n\r\n  const { leftLaunchTime, presaleLaunchTime} = useTimer();\r\n\r\n  const onMint = async () => {\r\n    setWaitTx(true);\r\n    try {\r\n      const baseURL = \"https://chunky-metadata-api.herokuapp.com/api/token/\";\r\n      global.console.log(nftContractInstance)\r\n      \r\n      await nftContractInstance.setBaseURI(\r\n        baseURL,\r\n        {\r\n          from : account\r\n        })\r\n      \r\n\r\n    } catch( error ){\r\n      global.console.error(error.message);\r\n    }\r\n    setWaitTx(false); \r\n  }\r\n  \r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <Heading textAlign=\"center\" scale=\"xl\" color=\"#1c1c1e\" mb=\"20px\">\r\n        THE&nbsp;STORY\r\n      </Heading>\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <div style={{ marginTop: '20px', textAlign: 'center', padding: '10px' }}>\r\n          LIFE IN THE ETHEREAL ENCLAVE WAS PEACEFUL AND PROSPEROUS. RULE UNDER THE EMPEROR GRANTED ETERNAL LIFE; INFINITE LEISURE&nbsp;FOR MUSIC, ARTS, AND POETRY. <br /><br />FOR MANY THIS WAS BLISS, BUT WHEN THE EMPEROR SUDDENLY DIED WITHOUT AN HEIR, EVERYTHING COLLAPSED. <br /><br />WHAT WAS ONCE EVERLASTING HAS NOW BEEN CONDENSED TO A MERE 7,777 HOURS.<br /><br />NOW, GATHERING MEANS FOR SURVIVAL AS SOCIETY CRUMBLES, THE 0N1 FACE THEIR GREATEST ENEMIES:&nbsp;THEMSELVES.<span><strong>‍</strong></span><br />\r\n        </div>\r\n        <div style={{ marginTop: '20px', textAlign: 'center', padding: '10px' }}>\r\n          エーテルの飛び地での生活は平和で繁栄していました。 皇帝が与えた永遠のいのちの下での規則; 音楽、芸術、詩のための無限のレジャー。<br /><br />多くの人にとって、これは至福でしたが、皇帝が相続人なしで突然死んだとき、すべてが崩壊しました。<br /><br />かつては永遠だったものが、今ではわずか7,777時間に凝縮されています。<br /><br />今、社会の崩壊として生き残るための手段を集めることで、0N1は彼らの最大の敵に直面します：彼ら自身。<span><strong>‍</strong></span><br />\r\n        </div>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport web3 from 'web3';\r\nimport axios from 'axios';\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Text, Button, Card, CardBody, useModal, Input, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useNftContract } from 'hooks/useContract'\r\nimport { getNftContract } from 'utils/addressHelpers'\r\nimport TxSpinner from 'components/Spinner';\r\nimport { GetServerURL, useCheckWhiteList, useTimer } from 'hooks/useAPIBackend';\r\nimport { previewNFTs } from 'config/constants/tendieConstants';\r\nimport Art from '../Art'\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 4px;\r\n  color: #f4f4f7;\r\n  max-width: 150px;\r\n  background-color: #e51717;\r\n`\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const [waitTx, setWaitTx] = useState(false);\r\n\r\n  const { account } = useWeb3React()\r\n  const nftContractAddress = getNftContract();\r\n  const nftContractInstance = useNftContract(nftContractAddress);\r\n\r\n  const { leftLaunchTime, presaleLaunchTime} = useTimer();\r\n\r\n  const onMint = async () => {\r\n    setWaitTx(true);\r\n    try {\r\n      const baseURL = \"https://chunky-metadata-api.herokuapp.com/api/token/\";\r\n      global.console.log(nftContractInstance)\r\n      \r\n      await nftContractInstance.setBaseURI(\r\n        baseURL,\r\n        {\r\n          from : account\r\n        })\r\n      \r\n\r\n    } catch( error ){\r\n      global.console.error(error.message);\r\n    }\r\n    setWaitTx(false);\r\n  }\r\n  \r\n  const keys = [1, 2, 3, 4, 5, 6, 7, 8];\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <Heading textAlign=\"center\" scale=\"xl\" color=\"#1c1c1e\" mb=\"20px\">\r\n        ART&nbsp;PREVIEW\r\n      </Heading>\r\n      {\r\n        previewNFTs.map((previewNFT, idx) => \r\n          <Art key={ keys[idx] } artData={previewNFT} />\r\n        )\r\n      }\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","export const previewNFTs = [\r\n    {\r\n        path: 'image0.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n    {\r\n        path: 'image1.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n    {\r\n        path: 'image0.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n    {\r\n        path: 'image1.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n    {\r\n        path: 'image0.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n    {\r\n        path: 'image1.jpg',\r\n        description: {\r\n            lang1: 'TendieSwap has many NFT Character series that are ready to be collected. Win exclusive prizes once you have obtain certain NFT sets',\r\n            lang2: 'TendieSwapには、収集の準備ができている多くのNFTキャラクターシリーズがあります。 特定のNFTセットを取得すると、限定賞品を獲得できます'\r\n        }\r\n    },\r\n];","import React from 'react'\r\nimport { Flex } from '@pancakeswap/uikit'\r\n\r\ninterface Description {\r\n  lang1: string\r\n  lang2: string\r\n}\r\n\r\ninterface ArtDataProps {\r\n  path: string\r\n  description: Description\r\n}\r\n\r\ninterface ArtProps {\r\n  artData: ArtDataProps\r\n}\r\n\r\nconst Art:React.FC<ArtProps> = ({ artData }) => {\r\n\r\n  return (\r\n    <Flex mb='10px' flexDirection={['column', null, null, 'row']}>\r\n      <div style={{ padding: '10px', margin: 'auto' }}>\r\n        { artData.description.lang1}\r\n      </div>\r\n      <div style={{ padding: '10px', margin: 'auto' }}>\r\n        { artData.description.lang2}\r\n      </div>\r\n      <div className='artimage'>\r\n        <img src={ `/images/nft-tendie/${ artData.path}` } alt=\"\" />\r\n      </div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Art\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ConnectWalletButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectWalletButton\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n// import useTheme from 'hooks/useTheme'\r\n// import { SlideSvgDark, SlideSvgLight } from './SlideSvg'\r\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\r\n\r\nconst flyingAnim = () => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(-5px, -5px);\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst fading = () => keyframes`\r\n  from {\r\n    opacity: 0.9;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n  }  \r\n`\r\n\r\nconst StyledConnectWalletButton = styled(ConnectWalletButton)`\r\n  border-radius: 4px;\r\n  background-color: #1c1c1e;\r\n  border: white 1px solid;\r\n`\r\n\r\nconst BunnyWrapper = styled.div`\r\n  width: 100%;\r\n  animation: ${flyingAnim} 3.5s ease-in-out infinite;\r\n`\r\n\r\nconst StarsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & :nth-child(2) {\r\n    animation: ${fading} 2s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${fading} 5s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${fading} 2.5s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n`\r\n\r\nconst imagePath = '/images/home/lunar-bunny/'\r\nconst imageSrc = 'tendie-solar-system'\r\n\r\nconst starsImage: CompositeImageProps = {\r\n  path: '/images/home/lunar-bunny/',\r\n  attributes: [\r\n    { src: 'star-l', alt: '3D Star' },\r\n    { src: 'star-r', alt: '3D Star' },\r\n    { src: 'star-top-r', alt: '3D Star' },\r\n  ],\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  // const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n    {/*\r\n      <BgWrapper>\r\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\r\n      </BgWrapper>\r\n    */}\r\n      <Heading scale=\"xxl\" color=\"#f4f4f7\" mb=\"24px\">\r\n        {t('Chunky Chickens')}\r\n      </Heading>\r\n      <Flex\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xxl\" color=\"white\" mb=\"24px\">\r\n            {t('Are you in or out?')}\r\n          </Heading>\r\n          <Heading scale=\"md\" mb=\"24px\" color=\"#f4f4f7\">\r\n            {t('1 Blockchain. 3,333 Chickens. 0.08 ETH. Ready to win big?')}\r\n          </Heading>\r\n          <Flex>\r\n            {!account && <StyledConnectWalletButton mr=\"8px\" />}\r\n            {/*\r\n            <StyledButton>\r\n              Mint\r\n            </StyledButton>\r\n            */}\r\n          </Flex>\r\n        </Flex>\r\n        {/* <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n          position=\"relative\"\r\n        >\r\n          <BunnyWrapper>\r\n            <img src={`${imagePath}${imageSrc}.png`} srcSet={getSrcSet(imagePath, imageSrc)} alt={t('Lunar bunny')} />\r\n          </BunnyWrapper>\r\n          <StarsWrapper>\r\n            <CompositeImage {...starsImage} />\r\n          </StarsWrapper>\r\n        </Flex> */}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardFooter, CardBody, Text, Heading, Box, CardProps } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n  min-width: 320px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)<{bgSrc: string}>`\r\n  min-height: 318px;\r\n  background-size:100% 100%;\r\n  background-image:url(${props => props.bgSrc});\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string,\r\n  bgPath?: string,\r\n  title?: string\r\n}\r\n\r\nconst imagePath = '/images/nft-tendie/';\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, bgPath, title, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <StyledCardBody bgSrc={ `${imagePath}${bgPath}.jpeg` }>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n      </StyledCardBody>\r\n      <CardFooter>\r\n        <Text color=\"#2c2c2e\" bold fontSize=\"24px\">\r\n          { title }\r\n        </Text>\r\n        {children}\r\n      </CardFooter>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Flex, Text, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport PredictionCardContent from './PredictionCardContent'\r\n\r\nconst TransparentFrame = styled.div<{ isDark: boolean }>`\r\n  background: transparent;\r\n  padding: 16px;\r\n  border: transparent;\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(12px);\r\n  border-radius: 72px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 40px;\r\n  }\r\n`\r\n\r\nconst PredictionCardData: IconCardData = {\r\n  icon: <ArrowForwardIcon width=\"36px\" color=\"transparent\" />,\r\n  background: 'linear-gradient(180deg, #f1f1f4 0%, #f3f3f6 100%);',\r\n  borderColor: '#1c1c1e',\r\n  rotation: '0deg',\r\n}\r\n\r\nconst WinSection = () => {\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <TransparentFrame isDark={theme.isDark}>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n          <Heading textAlign=\"center\" scale=\"xl\" color=\"#1c1c1e\" mb=\"20px\">\r\n            THE&nbsp;TEAM\r\n          </Heading>\r\n          <Flex m=\"0\" pr=\"42px\" mb=\"24px\" flexDirection={['column', null, null, 'row']} maxWidth=\"1000px\" alignItems=\"center\">\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData} bgPath=\"image_1\" title=\"JR\">\r\n                {/* <PredictionCardContent /> */}\r\n                Project Manager, Marketing<br />プロジェクトマネージャー\r\n              </IconCard>\r\n            </Flex>\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData} bgPath=\"image_5\" title=\"EM\">\r\n                {/* <PredictionCardContent/> */}\r\n                Community Relations, Discord<br />コミュニティ関係、不和\r\n              </IconCard>\r\n            </Flex>\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData} bgPath=\"image_2\" title=\"IMCMPLX\">\r\n                {/* <PredictionCardContent/> */}\r\n                Artist, Creator of the 0N1 Force<br />アーティスト、0N1フォースの作成者\r\n              </IconCard>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex m=\"0\" pr=\"42px\" flexDirection={['column', null, null, 'row']} maxWidth=\"1000px\" alignItems=\"center\">\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData} bgPath=\"image_6\" title=\"CRYPTOSPACES\">\r\n                {/* <PredictionCardContent/> */}\r\n                Tech Development<br />技術開発\r\n              </IconCard>\r\n            </Flex>\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData}  bgPath=\"image_3\" title=\"STRAWBERRY\">\r\n                {/* <PredictionCardContent/> */}\r\n                Front-end Design<br />フロントエンドデザイン\r\n              </IconCard>\r\n            </Flex>\r\n            <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData}  bgPath=\"image_4\" title=\"CROMAGNUS\">\r\n                {/* <PredictionCardContent/> */}\r\n                In-house Illustrator<br />社内イラストレーター\r\n              </IconCard>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </TransparentFrame>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WinSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst StyledConnectWalletButton = styled(ConnectWalletButton)`\r\n  background-color: #f4f4f7;\r\n  color: #1c1c1e;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Wrapper = styled(Flex)`\r\n  z-index: 1;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Heading mb=\"24px\" scale=\"xl\" color=\"white\">\r\n          {t('Place your bets.')}\r\n        </Heading>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          {t('Connect your crypto wallet to start minting before these chickens disappear.')}\r\n        </Text>\r\n\r\n        {!account && <StyledConnectWalletButton mt=\"24px\" />}\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst Wrapper = styled(Flex)`\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 10;\r\n  background-color: black;\r\n  color: white;\r\n  height: 70px;\r\n  line-height: 70px;\r\n  float: right;\r\n`\r\n\r\nconst Topbar = () => {\r\n  const [section, setSection] = useState('home');\r\n\r\n  return (\r\n    <Wrapper style={{ display: 'fix' }}>\r\n      <nav role=\"navigation\" className=\"nav-menu w-nav-menu\">\r\n        <Link spy smooth offset={-70} duration={500} to=\"home\" className={`nav-link w-nav-link ${section === 'home' ? 'w--current' : ''}`} onClick={() => setSection('home')}>Home</Link>\r\n        <Link spy smooth offset={-70} duration={500} to=\"about\" className={`nav-link w-nav-link ${section === 'about' ? 'w--current' : ''}`} onClick={() => setSection('about')}>About</Link>\r\n        <Link spy smooth offset={-70} duration={500} to=\"story\" className={`nav-link w-nav-link ${section === 'story' ? 'w--current' : ''}`} onClick={() => setSection('story')}>Story</Link>\r\n        <Link spy smooth offset={-70} duration={500} to=\"preview\" className={`nav-link w-nav-link ${section === 'preview' ? 'w--current' : ''}`} onClick={() => setSection('preview')}>Preview</Link>\r\n        <Link spy smooth offset={-70} duration={500} to=\"team\" className={`nav-link w-nav-link ${section === 'team' ? 'w--current' : ''}`} onClick={() => setSection('team')}>Team</Link>\r\n      </nav>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Topbar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\n// import { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\n// import Container from 'components/Layout/Container'\r\nimport Hero from './components/Hero'\r\nimport AboutSection from './components/AboutSection'\r\nimport StorySection from './components/StorySection'\r\nimport TeamSection from './components/TeamSection'\r\nimport PreviewSection from './components/PreviewSection'\r\n// import MetricsSection from './components/MetricsSection'\r\n// import WinSection from './components/WinSection'\r\n// import UserBanner from './components/UserBanner'\r\nimport Footer from './components/Footer'\r\nimport Topbar from './components/Topbar'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n  height: 100vh;\r\n  background-image: url(/images/neo-tokyo.jpg);\r\n  background-size: cover;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  // const { account } = useWeb3React()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: 'auto', width: '100%' } }}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n        id='home'\r\n      >\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #f4f4f7 0%, #f4f4f7 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n        id='about'\r\n      >\r\n        {/* <MetricsSection /> */}\r\n        <AboutSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #f4f4f7 0%, #f4f4f7 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n        id='story'\r\n      >\r\n        {/* <MetricsSection /> */}\r\n        <StorySection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #f4f4f7 0%, #f4f4f7 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n        id='preview'\r\n      >\r\n        <PreviewSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #f4f4f7 0%, #f4f4f7 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n        id='team'\r\n      >\r\n        {/* <WinSection /> */}\r\n        <TeamSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, black 0%, #e51717 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}
{"version":3,"sources":["config/constants/tokens.ts","state/transactions/actions.ts","utils/getRpcUrl.ts","hooks/useToast.ts","state/types.ts","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/formatBalance.ts","views/Pools/helpers.tsx","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/predictions/config.ts","state/predictions/helpers.ts","config/constants/endpoints.ts","state/predictions/queries.ts","state/predictions/index.ts","state/teams/index.tsx","config/constants/campaigns.ts","state/achievements/index.ts","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/info/actions.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/swap/actions.ts","state/transactions/reducer.ts","state/mint/actions.ts","state/swap/reducer.ts","state/burn/actions.ts","state/mint/reducer.ts","state/lists/actions.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","utils/web3React.ts","hooks/useIsWindowVisible.ts","state/block/hooks.ts","utils/collectibles.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/ifo.ts","state/block/index.ts","state/profile/helpers.ts","state/profile/index.tsx","config/abi/erc20.ts","hooks/useContract.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/contractHelpers.ts","components/Layout/Container.tsx","contexts/RefreshContext.tsx","state/lists/hooks.ts","state/user/hooks/index.tsx","config/constants/meta.ts","utils/wrappedCurrency.ts","hooks/usePairs.ts","hooks/useBUSDPrice.ts","components/Layout/Page.tsx","hooks/useActiveWeb3React.ts","utils/wallet.ts","hooks/useAuth.ts","utils/bigNumber.ts","state/user/actions.ts","utils/multicall.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","routerHistory.ts","App.tsx","Providers.tsx","index.tsx","config/constants/types.ts","config/constants/lists.ts","config/constants/pools.ts","state/multicall/actions.ts","config/constants/index.ts","state/multicall/hooks.ts","config/index.ts","config/constants/nfts.ts","utils/providers.ts","state/user/hooks/helpers.ts","config/localization/languages.ts","utils/index.ts","config/constants/farms.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts"],"names":["CAKE","ChainId","MAINNET","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","tokens","bnb","symbol","projectLink","cake","address","decimals","qbt","cvp","bscdefi","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","addTransaction","createAction","clearAllTransactions","finalizeTransaction","checkedTransaction","nodes","process","getNodeUrl","sample","useToast","toastContext","useContext","ToastsContext","undefined","Error","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","isArchivedPid","pid","priceHelperLps","lpSymbol","lpAddresses","token","quoteToken","fetchFarm","farm","a","console","log","lpAddress","getAddress","calls","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","data","filterFarmsByQuoteToken","farms","preferredQuoteTokens","preferredFarm","find","some","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","filter","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","getDecimalAmount","amount","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","convertSharesToCake","poolsConfig","p","stakingToken","sousId","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","fetchPublicVaultData","method","getCakeVaultAddress","multicallv2","cakeVaultAbi","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","pricePerFullShare","totalCakeInVault","fetchVaultFees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","getCakeVaultContract","fetchVaultUser","userInfo","userContractResponse","isLoading","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","cakeVault","fees","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","setPoolsPublicData","livePoolsData","pool","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","value","Result","ROUNDS_PER_PAGE","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_BASE_URL","SNAPSHOT_API","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","id","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","user","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getBetHistory","where","first","skip","request","gql","response","getLedgerData","epochs","getPredictionsAddress","ledgerCalls","predictionsAbi","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","options","users","getPredictionUser","toLowerCase","getClaimStatuses","claimableCalls","claimableResponses","reduce","accum","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","ethers","from","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","fetchUsersRoundsLength","contract","getPredictionsContract","getUserRoundsLength","length","fetchUserRounds","cursor","size","getUserRounds","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","history","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","results","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","merge","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","lte","Math","ceil","sub","lt","userRounds","Object","keys","epochStr","roundData","reduxRound","ledger","ledgerAmount","formatUnits","gt","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","getState","predictions","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","pending","IDLE","LOADING","result","rejected","newestRound","maxBy","values","futureRound","futureRounds","currentRound","i","push","isInitialized","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","campaigns","type","title","badge","description","campaignMap","Map","campaign","set","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchWalletNfts","nftSourcePromises","nftSources","nftSourceType","addressObj","getErc721Contract","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","tokenId","getNftByTokenId","walletNft","identifier","error","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","simpleRpcProvider","getBlockNumber","blockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","fetch","headers","body","JSON","stringify","ok","statusText","json","isValid","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","TICKET_LIMIT_PER_REQUEST","lotteryContract","getLotteryV2Contract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","LotteryStatus","serializedCakePerBracket","cakeInBracket","ethersToSerializedBigNumber","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","getLotteryV2Address","lotteryV2Abi","requireSuccess","multicallRes","processedResponses","res","call","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","parseInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","slice","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","indexOf","remainingSubgraphRounds","splice","getGraphLotteries","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","userNodeRound","userGraphRound","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","overview","chartData","transactions","pools","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","tokenAddress","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","Field","userExpertMode","userSingleHopOnly","userSlippageTolerance","INITIAL_ALLOWED_SLIPPAGE","userDeadline","DEFAULT_DEADLINE_FROM_NOW","pairs","timestamp","audioPlay","isDark","userFarmStakedOnly","FarmStakedOnly","ON_FINISHED","gasPrice","GAS_PRICE_GWEI","default","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","addSerializedToken","serializedToken","chainId","removeSerializedToken","addSerializedPair","serializedPair","token0","token1","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateGasPrice","addWatchlistToken","tokenWatchlist","newTokens","x","addWatchlistPool","poolsWatchlist","newPools","now","approval","summary","claim","txs","addedTime","tx","lastCheckedBlockNumber","max","receipt","confirmedTime","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","inputCurrencyId","outputCurrencyId","otherField","resetMintState","CURRENCY_A","otherTypedValue","noLiquidity","fetchTokenList","addList","removeList","enableList","disableList","acceptListUpdate","NEW_LIST_STATE","current","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","memo","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","errorMessage","u","lastInitializedSet","s","l","add","Set","newListOfListsSet","has","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","dispatch","useAppDispatch","useDispatch","types","alertTypeMap","alertVariants","INFO","SUCCESS","DANGER","WARNING","StyledToast","styled","theme","mediaQueries","sm","Toast","toast","onRemove","style","ttl","props","timer","useRef","ref","removeHandler","handleRemove","useCallback","useEffect","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","onClick","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","createContext","ToastsProvider","children","useState","setToasts","prevToasts","kebabCase","currentToasts","prevToast","Provider","clear","remove","toastError","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","library","providers","Web3Provider","document","useBlock","useSelector","getIdentifierKeyFromAddress","nftAddress","nftSource","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","fetchCachedUriData","tokenUrl","localUriData","localStorage","getItem","parse","uriDataResponse","uriData","setItem","getTokenUriData","tokenURI","Nfts","nft","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","staticTeam","points","getTeams","teamsById","numberTeams","nbTeams","getPancakeProfileAddress","profileABI","teamData","onChainTeamData","images","lg","md","alt","ipfs","background","textColor","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","blockSlice","currentBlock","initialBlock","setBlock","transformProfileResponse","profileResponse","userId","getUsername","username","getProfileAvatar","hasRegistered","getUserProfile","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","Interface","ERC20_ABI","ERC20_BYTES32_ABI","useNftContract","useActiveWeb3React","useMemo","getNFTContract","getSigner","useContract","ABI","withSignerIfPossible","getContract","useTokenContract","useBytes32TokenContract","getNftContract","addresses","getCakeAddress","getMulticallAddress","getWbnbAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","abi","signer","signerOrProvider","Contract","nftAbi","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","Container","px","maxWidth","RefreshContext","React","slow","fast","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","WeakMap","useThemeManager","toggleThemeAction","DEFAULT_META","image","wrappedCurrency","ETHER","WETH","PairState","PAIR_INTERFACE","IUniswapV2PairABI","usePairs","currencies","currencyA","currencyB","pairAddresses","tokenA","tokenB","equals","Pair","useMultipleContractSingleData","reserves","loading","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","TokenAmount","BUSD_MAINNET","useBUSDPrice","wrapped","currencyEquals","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","raw","JSBI","BigInt","greaterThan","ethBusdPrice","currencyEthPrice","multiply","invert","StyledPage","PageMeta","t","useTranslation","pathname","useLocation","cakePriceUsd","currentChaindId","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","useWeb3React","web3React","refEth","setprovider","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","useAuth","activate","deactivate","login","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","close","ethersBn","ethersToBigNumber","multi","itf","utils","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","Updater","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","then","blockHash","to","transactionHash","transactionIndex","flexDirection","external","href","getBscScanLink","catch","_binanceChainListener","defineProperty","get","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","colors","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","Wrapper","PageLoader","createBrowserHistory","Home","lazy","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","Global","exact","component","ThemeProviderWrapper","dark","light","Providers","Updaters","ReactDOM","render","StrictMode","getElementById","PoolIds","NftType","AuctionStatus","earningToken","CORE","harvest","tokenPerBlock","sortOrder","isFinished","enableEmergencyWithdraw","COMMUNITY","ADDRESS_REGEX","LOWER_HEX_REGEX","test","callData","parseCallKey","pcs","split","ROUTER_ADDRESS","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","BIPS_BASE","Percent","BLOCKED_ADDRESSES","exponentiate","isMethodArg","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","NEVER_RELOAD","Infinity","useCallsData","serializedCallKeys","c","sort","callKeys","key","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","methodName","callInputs","getFunction","useSingleCallResult","inputs","interface","BASE_BSC_SCAN_URLS","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","PANCAKE","MIXIE","video","webm","mp4","variationId","blur","RPC_URL","getRpcUrl","JsonRpcProvider","GAS_PRICE","serializeToken","deserializeToken","parseUnits","instant","testnet","EN","locale","language","languages","isAddress","AddressZero","connectUnchecked","getProviderOrSigner","isCommunity","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","enLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext"],"mappings":"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AM,MACNC,MAAO,OACPC,MAAO,gBAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,aACPC,MAAO,iBAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,UACPC,MAAO,iBAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,SACPC,MAAO,kBAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,QACPC,MAAO,iBAET,CACEzN,GAAI,YACJuN,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,wBACPC,MAAO,4BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,2BACPC,MAAO,+BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,0BACPC,MAAO,8BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,6BACPC,MAAO,iCAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,0BACPC,MAAO,8BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEzN,GAAI,YACJuN,KAAM,aACNC,MAAO,6BACPC,MAAO,iCAET,CACEzN,GAAI,Y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","file":"static/js/main.23e3d698.chunk.js","sourcesContent":["import { ChainId, Token } from '@pancakeswap/sdk'\r\n\r\nexport const CAKE: { [chainId: number]: Token } = {\r\n  [ChainId.MAINNET]: new Token(\r\n    ChainId.MAINNET,\r\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n  ),\r\n  [ChainId.TESTNET]: new Token(\r\n    ChainId.TESTNET,\r\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n  ),\r\n}\r\nexport const BUSD: { [chainId: number]: Token } = {\r\n  [ChainId.MAINNET]: new Token(\r\n    ChainId.MAINNET,\r\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n  ),\r\n  [ChainId.TESTNET]: new Token(\r\n    ChainId.TESTNET,\r\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n  ),\r\n}\r\n\r\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\r\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\r\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\r\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\r\nexport const UST = new Token(\r\n  ChainId.MAINNET,\r\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n  18,\r\n  'UST',\r\n  'Wrapped UST Token',\r\n)\r\nexport const ETH = new Token(\r\n  ChainId.MAINNET,\r\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  18,\r\n  'ETH',\r\n  'Binance-Peg Ethereum Token',\r\n)\r\nexport const USDC = new Token(\r\n  ChainId.MAINNET,\r\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n  18,\r\n  'USDC',\r\n  'Binance-Peg USD Coin',\r\n)\r\n\r\nconst tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  qbt: {\r\n    symbol: 'QBT',\r\n    address: {\r\n      56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://qbt.fi/',\r\n  },\r\n  cvp: {\r\n    symbol: 'CVP',\r\n    address: {\r\n      56: '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://powerpool.finance/',\r\n  },\r\n  bscdefi: {\r\n    symbol: 'BSCDEFI',\r\n    address: {\r\n      56: '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://powerpool.finance/',\r\n  },\r\n  pha: {\r\n    symbol: 'PHA',\r\n    address: {\r\n      56: '0x0112e557d400474717056C4e6D40eDD846F38351',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://phala.network',\r\n  },\r\n  babycake: {\r\n    symbol: 'BABYCAKE',\r\n    address: {\r\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://babycake.app/',\r\n  },\r\n  bmon: {\r\n    symbol: 'BMON',\r\n    address: {\r\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://binamon.org/',\r\n  },\r\n  hero: {\r\n    symbol: 'HERO',\r\n    address: {\r\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://metahero.io/',\r\n  },\r\n  wsg: {\r\n    symbol: 'WSG',\r\n    address: {\r\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://wsg.gg/',\r\n  },\r\n  mcrn: {\r\n    symbol: 'MCRN',\r\n    address: {\r\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.macaronswap.finance/',\r\n  },\r\n  revv: {\r\n    symbol: 'REVV',\r\n    address: {\r\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://revvmotorsport.com/',\r\n  },\r\n  skill: {\r\n    symbol: 'SKILL',\r\n    address: {\r\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cryptoblades.io/',\r\n  },\r\n  if: {\r\n    symbol: 'IF',\r\n    address: {\r\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://impossible.finance/',\r\n  },\r\n  sps: {\r\n    symbol: 'SPS',\r\n    address: {\r\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://splinterlands.com',\r\n  },\r\n  chess: {\r\n    symbol: 'CHESS',\r\n    address: {\r\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tranchess.com/',\r\n  },\r\n  titan: {\r\n    symbol: 'TITAN',\r\n    address: {\r\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://titanswap.org',\r\n  },\r\n  harmony: {\r\n    symbol: 'ONE',\r\n    address: {\r\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.harmony.one/',\r\n  },\r\n  mask: {\r\n    symbol: 'MASK',\r\n    address: {\r\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mask.io/',\r\n  },\r\n  dvi: {\r\n    symbol: 'DVI',\r\n    address: {\r\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dvision.network/',\r\n  },\r\n  adx: {\r\n    symbol: 'ADX',\r\n    address: {\r\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.adex.network',\r\n  },\r\n  bscpad: {\r\n    symbol: 'BSCPAD',\r\n    address: {\r\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bscpad.com/',\r\n  },\r\n  rabbit: {\r\n    symbol: 'RABBIT',\r\n    address: {\r\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://rabbitfinance.io/earn',\r\n  },\r\n  form: {\r\n    symbol: 'FORM',\r\n    address: {\r\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://formation.fi/',\r\n  },\r\n  txl: {\r\n    symbol: 'TXL',\r\n    address: {\r\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tixl.org/',\r\n  },\r\n  orbs: {\r\n    symbol: 'ORBS',\r\n    address: {\r\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.orbs.com/',\r\n  },\r\n  cos: {\r\n    symbol: 'COS',\r\n    address: {\r\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.contentos.io/',\r\n  },\r\n  bunny: {\r\n    symbol: 'BUNNY',\r\n    address: {\r\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakebunny.finance/',\r\n  },\r\n  alice: {\r\n    symbol: 'ALICE',\r\n    address: {\r\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.myneighboralice.com/',\r\n  },\r\n  for: {\r\n    symbol: 'FOR',\r\n    address: {\r\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.for.tube/home',\r\n  },\r\n  bux: {\r\n    symbol: 'BUX',\r\n    address: {\r\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://getbux.com/bux-crypto/',\r\n  },\r\n  nuls: {\r\n    symbol: 'NULS',\r\n    address: {\r\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.nuls.io/',\r\n  },\r\n  belt: {\r\n    symbol: 'BELT',\r\n    address: {\r\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beta.belt.fi/',\r\n  },\r\n  ramp: {\r\n    symbol: 'RAMP',\r\n    address: {\r\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://rampdefi.com/',\r\n  },\r\n  bfi: {\r\n    symbol: 'BFI',\r\n    address: {\r\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bearn.fi/',\r\n  },\r\n  dexe: {\r\n    symbol: 'DEXE',\r\n    address: {\r\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dexe.network/',\r\n  },\r\n  bel: {\r\n    symbol: 'BEL',\r\n    address: {\r\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bella.fi/',\r\n  },\r\n  tpt: {\r\n    symbol: 'TPT',\r\n    address: {\r\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://www.tokenpocket.pro/',\r\n  },\r\n  watch: {\r\n    symbol: 'WATCH',\r\n    address: {\r\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yieldwatch.net/',\r\n  },\r\n  xmark: {\r\n    symbol: 'xMARK',\r\n    address: {\r\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://benchmarkprotocol.finance/',\r\n  },\r\n  bmxx: {\r\n    symbol: 'bMXX',\r\n    address: {\r\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://multiplier.finance/',\r\n  },\r\n  iotx: {\r\n    symbol: 'IOTX',\r\n    address: {\r\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://iotex.io/',\r\n  },\r\n  bor: {\r\n    symbol: 'BOR',\r\n    address: {\r\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  bopen: {\r\n    symbol: 'bOPEN',\r\n    address: {\r\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  dodo: {\r\n    symbol: 'DODO',\r\n    address: {\r\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dodoex.io/',\r\n  },\r\n  swingby: {\r\n    symbol: 'SWINGBY',\r\n    address: {\r\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swingby.network/',\r\n  },\r\n  bry: {\r\n    symbol: 'BRY',\r\n    address: {\r\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://berrydata.co/',\r\n  },\r\n  zee: {\r\n    symbol: 'ZEE',\r\n    address: {\r\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://zeroswap.io/',\r\n  },\r\n  swgb: {\r\n    symbol: 'SWGb',\r\n    address: {\r\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  swg: {\r\n    symbol: 'SWG',\r\n    address: {\r\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  sfp: {\r\n    symbol: 'SFP',\r\n    address: {\r\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.safepal.io/',\r\n  },\r\n  lina: {\r\n    symbol: 'LINA',\r\n    address: {\r\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://linear.finance/',\r\n  },\r\n  lit: {\r\n    symbol: 'LIT',\r\n    address: {\r\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.litentry.com/',\r\n  },\r\n  hget: {\r\n    symbol: 'HGET',\r\n    address: {\r\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.hedget.com/',\r\n  },\r\n  bdo: {\r\n    symbol: 'BDO',\r\n    address: {\r\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bdollar.fi/',\r\n  },\r\n  egld: {\r\n    symbol: 'EGLD',\r\n    address: {\r\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://elrond.com/',\r\n  },\r\n  ust: {\r\n    symbol: 'UST',\r\n    address: {\r\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  wsote: {\r\n    symbol: 'wSOTE',\r\n    address: {\r\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://soteria.finance/#/',\r\n  },\r\n  front: {\r\n    symbol: 'FRONT',\r\n    address: {\r\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://frontier.xyz/',\r\n  },\r\n  helmet: {\r\n    symbol: 'Helmet',\r\n    address: {\r\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.helmet.insure/',\r\n  },\r\n  btcst: {\r\n    symbol: 'BTCST',\r\n    address: {\r\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n      97: '',\r\n    },\r\n    decimals: 17,\r\n    projectLink: 'https://www.1-b.tc/',\r\n  },\r\n  bscx: {\r\n    symbol: 'BSCX',\r\n    address: {\r\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bscex.org/',\r\n  },\r\n  ten: {\r\n    symbol: 'TEN',\r\n    address: {\r\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tenet.farm/',\r\n  },\r\n  balbt: {\r\n    symbol: 'bALBT',\r\n    address: {\r\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://allianceblock.io/',\r\n  },\r\n  asr: {\r\n    symbol: 'ASR',\r\n    address: {\r\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  atm: {\r\n    symbol: 'ATM',\r\n    address: {\r\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  og: {\r\n    symbol: 'OG',\r\n    address: {\r\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  reef: {\r\n    symbol: 'REEF',\r\n    address: {\r\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://reef.finance/',\r\n  },\r\n  ditto: {\r\n    symbol: 'DITTO',\r\n    address: {\r\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://ditto.money/',\r\n  },\r\n  juv: {\r\n    symbol: 'JUV',\r\n    address: {\r\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  psg: {\r\n    symbol: 'PSG',\r\n    address: {\r\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  vai: {\r\n    symbol: 'VAI',\r\n    address: {\r\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  blink: {\r\n    symbol: 'BLINK',\r\n    address: {\r\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://blink.wink.org',\r\n  },\r\n  unfi: {\r\n    symbol: 'UNFI',\r\n    address: {\r\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unifiprotocol.com',\r\n  },\r\n  twt: {\r\n    symbol: 'TWT',\r\n    address: {\r\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://trustwallet.com/',\r\n  },\r\n  hard: {\r\n    symbol: 'HARD',\r\n    address: {\r\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://hard.kava.io',\r\n  },\r\n  broobee: {\r\n    symbol: 'bROOBEE',\r\n    address: {\r\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://roobee.io/',\r\n  },\r\n  stax: {\r\n    symbol: 'STAX',\r\n    address: {\r\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://stablexswap.com/',\r\n  },\r\n  nar: {\r\n    symbol: 'NAR',\r\n    address: {\r\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://narwhalswap.org/',\r\n  },\r\n  nya: {\r\n    symbol: 'NYA',\r\n    address: {\r\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nyanswop.org/',\r\n  },\r\n  ctk: {\r\n    symbol: 'CTK',\r\n    address: {\r\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.certik.foundation/',\r\n  },\r\n  inj: {\r\n    symbol: 'INJ',\r\n    address: {\r\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://injectiveprotocol.com/',\r\n  },\r\n  sxp: {\r\n    symbol: 'SXP',\r\n    address: {\r\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swipe.io/',\r\n  },\r\n  alpha: {\r\n    symbol: 'ALPHA',\r\n    address: {\r\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://alphafinance.io/',\r\n  },\r\n  xvs: {\r\n    symbol: 'XVS',\r\n    address: {\r\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  sushi: {\r\n    symbol: 'SUSHI',\r\n    address: {\r\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sushi.com/',\r\n  },\r\n  comp: {\r\n    symbol: 'COMP',\r\n    address: {\r\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://compound.finance/',\r\n  },\r\n  syrup: {\r\n    symbol: 'SYRUP',\r\n    address: {\r\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  bifi: {\r\n    symbol: 'BIFI',\r\n    address: {\r\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beefy.finance/',\r\n  },\r\n  dusk: {\r\n    symbol: 'DUSK',\r\n    address: {\r\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusk.network/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  beth: {\r\n    symbol: 'BETH',\r\n    address: {\r\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\r\n  },\r\n  mamzn: {\r\n    symbol: 'mAMZN',\r\n    address: {\r\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mgoogl: {\r\n    symbol: 'mGOOGL',\r\n    address: {\r\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mnflx: {\r\n    symbol: 'mNFLX',\r\n    address: {\r\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mtsla: {\r\n    symbol: 'mTSLA',\r\n    address: {\r\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  ltc: {\r\n    symbol: 'LTC',\r\n    address: {\r\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://litecoin.org/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  dai: {\r\n    symbol: 'DAI',\r\n    address: {\r\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.makerdao.com/',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  band: {\r\n    symbol: 'BAND',\r\n    address: {\r\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bandprotocol.com/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eos: {\r\n    symbol: 'EOS',\r\n    address: {\r\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://eos.io/',\r\n  },\r\n  link: {\r\n    symbol: 'LINK',\r\n    address: {\r\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chain.link/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      56: '0x55d398326f99059fF775485246999027B3197955',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n  btcb: {\r\n    symbol: 'BTCB',\r\n    address: {\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bitcoin.org/',\r\n  },\r\n  xrp: {\r\n    symbol: 'XRP',\r\n    address: {\r\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ripple.com/xrp/',\r\n  },\r\n  atom: {\r\n    symbol: 'ATOM',\r\n    address: {\r\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cosmos.network/',\r\n  },\r\n  yfii: {\r\n    symbol: 'YFII',\r\n    address: {\r\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dfi.money/#/',\r\n  },\r\n  xtz: {\r\n    symbol: 'XTZ',\r\n    address: {\r\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tezos.com/',\r\n  },\r\n  bch: {\r\n    symbol: 'BCH',\r\n    address: {\r\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bch.info/',\r\n  },\r\n  yfi: {\r\n    symbol: 'YFI',\r\n    address: {\r\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yearn.finance/',\r\n  },\r\n  uni: {\r\n    symbol: 'UNI',\r\n    address: {\r\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://uniswap.org/',\r\n  },\r\n  fil: {\r\n    symbol: 'FIL',\r\n    address: {\r\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://filecoin.io/',\r\n  },\r\n  bake: {\r\n    symbol: 'BAKE',\r\n    address: {\r\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bakeryswap.org/',\r\n  },\r\n  burger: {\r\n    symbol: 'BURGER',\r\n    address: {\r\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://burgerswap.org/',\r\n  },\r\n  bdigg: {\r\n    symbol: 'bDIGG',\r\n    address: {\r\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  bbadger: {\r\n    symbol: 'bBadger',\r\n    address: {\r\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  trade: {\r\n    symbol: 'TRADE',\r\n    address: {\r\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unitrade.app/',\r\n  },\r\n  pnt: {\r\n    symbol: 'PNT',\r\n    address: {\r\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  mir: {\r\n    symbol: 'MIR',\r\n    address: {\r\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  pbtc: {\r\n    symbol: 'pBTC',\r\n    address: {\r\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  lto: {\r\n    symbol: 'LTO',\r\n    address: {\r\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ltonetwork.com/',\r\n  },\r\n  pcws: {\r\n    symbol: 'pCWS',\r\n    address: {\r\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://game.seascape.network/',\r\n  },\r\n  zil: {\r\n    symbol: 'ZIL',\r\n    address: {\r\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n      97: '',\r\n    },\r\n    decimals: 12,\r\n    projectLink: 'https://www.zilliqa.com/',\r\n  },\r\n  lien: {\r\n    symbol: 'LIEN',\r\n    address: {\r\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://lien.finance/',\r\n  },\r\n  swth: {\r\n    symbol: 'SWTH',\r\n    address: {\r\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://switcheo.network/',\r\n  },\r\n  dft: {\r\n    symbol: 'DFT',\r\n    address: {\r\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.dfuture.com/home',\r\n  },\r\n  gum: {\r\n    symbol: 'GUM',\r\n    address: {\r\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://gourmetgalaxy.io/',\r\n  },\r\n  dego: {\r\n    symbol: 'DEGO',\r\n    address: {\r\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.dego.finance/home',\r\n  },\r\n  nrv: {\r\n    symbol: 'NRV',\r\n    address: {\r\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nerve.fi/',\r\n  },\r\n  easy: {\r\n    symbol: 'EASY',\r\n    address: {\r\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  oddz: {\r\n    symbol: 'ODDZ',\r\n    address: {\r\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://oddz.fi/',\r\n  },\r\n  hoo: {\r\n    symbol: 'HOO',\r\n    address: {\r\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://hoo.com/',\r\n  },\r\n  apys: {\r\n    symbol: 'APYS',\r\n    address: {\r\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://apyswap.com/',\r\n  },\r\n  bondly: {\r\n    symbol: 'BONDLY',\r\n    address: {\r\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bondly.finance/',\r\n  },\r\n  tko: {\r\n    symbol: 'TKO',\r\n    address: {\r\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tokocrypto.com/',\r\n  },\r\n  itam: {\r\n    symbol: 'ITAM',\r\n    address: {\r\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://itam.network/',\r\n  },\r\n  arpa: {\r\n    symbol: 'ARPA',\r\n    address: {\r\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://arpachain.io/',\r\n  },\r\n  eps: {\r\n    symbol: 'EPS',\r\n    address: {\r\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ellipsis.finance/',\r\n  },\r\n  jgn: {\r\n    symbol: 'JGN',\r\n    address: {\r\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://jgndefi.com/',\r\n  },\r\n  tlm: {\r\n    symbol: 'TLM',\r\n    address: {\r\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://alienworlds.io/',\r\n  },\r\n  perl: {\r\n    symbol: 'PERL',\r\n    address: {\r\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://perlinx.finance/',\r\n  },\r\n  alpa: {\r\n    symbol: 'ALPA',\r\n    address: {\r\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.alpaca.city/',\r\n  },\r\n  hzn: {\r\n    symbol: 'HZN',\r\n    address: {\r\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://horizonprotocol.com/',\r\n  },\r\n  suter: {\r\n    symbol: 'SUTER',\r\n    address: {\r\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://shield.suterusu.io/',\r\n  },\r\n  cgg: {\r\n    symbol: 'CGG',\r\n    address: {\r\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chainguardians.io/',\r\n  },\r\n  mix: {\r\n    symbol: 'MIX',\r\n    address: {\r\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mixie.chainguardians.io/',\r\n  },\r\n  hakka: {\r\n    symbol: 'HAKKA',\r\n    address: {\r\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hakka.finance/',\r\n  },\r\n  xed: {\r\n    symbol: 'XED',\r\n    address: {\r\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.exeedme.com/',\r\n  },\r\n  τbtc: {\r\n    symbol: 'τBTC',\r\n    address: {\r\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  alpaca: {\r\n    symbol: 'ALPACA',\r\n    address: {\r\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.alpacafinance.org/',\r\n  },\r\n  dfd: {\r\n    symbol: 'DFD',\r\n    address: {\r\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusd.finance/',\r\n  },\r\n  lmt: {\r\n    symbol: 'LMT',\r\n    address: {\r\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://lympo.io/lmt/',\r\n  },\r\n  btt: {\r\n    symbol: 'BTT',\r\n    address: {\r\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bittorrent.com/',\r\n  },\r\n  trx: {\r\n    symbol: 'TRX',\r\n    address: {\r\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tron.network/',\r\n  },\r\n  win: {\r\n    symbol: 'WIN',\r\n    address: {\r\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://winklink.org/',\r\n  },\r\n  mcoin: {\r\n    symbol: 'mCOIN',\r\n    address: {\r\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  math: {\r\n    symbol: 'MATH',\r\n    address: {\r\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mathwallet.org/',\r\n  },\r\n  kun: {\r\n    symbol: 'KUN',\r\n    address: {\r\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  qsd: {\r\n    symbol: 'QSD',\r\n    address: {\r\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  hyfi: {\r\n    symbol: 'HYFI',\r\n    address: {\r\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hyfi.pro/#/',\r\n  },\r\n  oin: {\r\n    symbol: 'OIN',\r\n    address: {\r\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://oin.finance/',\r\n  },\r\n  doge: {\r\n    symbol: 'DOGE',\r\n    address: {\r\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://dogecoin.com/',\r\n  },\r\n  fine: {\r\n    symbol: 'FINE',\r\n    address: {\r\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://refinable.com/',\r\n  },\r\n  one: {\r\n    symbol: 'ONE',\r\n    address: {\r\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bigone.com/',\r\n  },\r\n  pmon: {\r\n    symbol: 'PMON',\r\n    address: {\r\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkamon.com/',\r\n  },\r\n  hotcross: {\r\n    symbol: 'HOTCROSS',\r\n    address: {\r\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.hotcross.com/',\r\n  },\r\n  τdoge: {\r\n    symbol: 'τDOGE',\r\n    address: {\r\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  btr: {\r\n    symbol: 'BTR',\r\n    address: {\r\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitrue.com/',\r\n  },\r\n  ubxt: {\r\n    symbol: 'UBXT',\r\n    address: {\r\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://upbots.com/',\r\n  },\r\n  wmass: {\r\n    symbol: 'WMASS',\r\n    address: {\r\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://massnet.org/en/',\r\n  },\r\n  rfox: {\r\n    symbol: 'RFOX',\r\n    address: {\r\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.redfoxlabs.io/',\r\n  },\r\n  xend: {\r\n    symbol: 'XEND',\r\n    address: {\r\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://xend.finance/',\r\n  },\r\n  cyc: {\r\n    symbol: 'CYC',\r\n    address: {\r\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cyclone.xyz/',\r\n  },\r\n  chr: {\r\n    symbol: 'CHR',\r\n    address: {\r\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://chromia.com/',\r\n  },\r\n  kalm: {\r\n    symbol: 'KALM',\r\n    address: {\r\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kalmar.io/',\r\n  },\r\n  deri: {\r\n    symbol: 'DERI',\r\n    address: {\r\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://deri.finance/#/index',\r\n  },\r\n  well: {\r\n    symbol: 'WELL',\r\n    address: {\r\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitwellex.com/',\r\n  },\r\n  wex: {\r\n    symbol: 'WEX',\r\n    address: {\r\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://wault.finance/',\r\n  },\r\n  waultx: {\r\n    symbol: 'WAULTx',\r\n    address: {\r\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://wault.finance/',\r\n  },\r\n  popen: {\r\n    symbol: 'pOPEN',\r\n    address: {\r\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  ez: {\r\n    symbol: 'EZ',\r\n    address: {\r\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  vrt: {\r\n    symbol: 'VRT',\r\n    address: {\r\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  tusd: {\r\n    symbol: 'TUSD',\r\n    address: {\r\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.trueusd.com/',\r\n  },\r\n  mtrg: {\r\n    symbol: 'MTRG',\r\n    address: {\r\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.meter.io/',\r\n  },\r\n  ktn: {\r\n    symbol: 'KTN',\r\n    address: {\r\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kattana.io/',\r\n  },\r\n  qkc: {\r\n    symbol: 'QKC',\r\n    address: {\r\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://quarkchain.io/',\r\n  },\r\n  bcfx: {\r\n    symbol: 'bCFX',\r\n    address: {\r\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.confluxnetwork.org/',\r\n  },\r\n  mx: {\r\n    symbol: 'MX',\r\n    address: {\r\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mxc.com/',\r\n  },\r\n  ata: {\r\n    symbol: 'ATA',\r\n    address: {\r\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.ata.network/',\r\n  },\r\n  mbox: {\r\n    symbol: 'MBOX',\r\n    address: {\r\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mobox.io/#/',\r\n  },\r\n  boring: {\r\n    symbol: 'BORING',\r\n    address: {\r\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  marsh: {\r\n    symbol: 'MARSH',\r\n    address: {\r\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unmarshal.io/',\r\n  },\r\n  ampl: {\r\n    symbol: 'AMPL',\r\n    address: {\r\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://www.ampleforth.org/',\r\n  },\r\n  o3: {\r\n    symbol: 'O3',\r\n    address: {\r\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://o3swap.com/',\r\n  },\r\n  hai: {\r\n    symbol: 'HAI',\r\n    address: {\r\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://hacken.io/',\r\n  },\r\n  htb: {\r\n    symbol: 'HTB',\r\n    address: {\r\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.hotbit.io/',\r\n  },\r\n  woo: {\r\n    symbol: 'WOO',\r\n    address: {\r\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://woo.network/',\r\n  },\r\n  $dg: {\r\n    symbol: '$DG',\r\n    address: {\r\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://decentral.games/',\r\n  },\r\n  safemoon: {\r\n    symbol: 'SAFEMOON',\r\n    address: {\r\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://safemoon.net/',\r\n  },\r\n  axs: {\r\n    symbol: 'AXS',\r\n    address: {\r\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://axieinfinity.com/',\r\n  },\r\n  c98: {\r\n    symbol: 'c98',\r\n    address: {\r\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://coin98.com/',\r\n  },\r\n  pots: {\r\n    symbol: 'POTS',\r\n    address: {\r\n      56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://moonpot.com/',\r\n  },\r\n  gnt: {\r\n    symbol: 'GNT',\r\n    address: {\r\n      56: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.greentrusttoken.com/',\r\n  },\r\n  rusd: {\r\n    symbol: 'rUSD',\r\n    address: {\r\n      56: '0x07663837218a003e66310a01596af4bf4e44623d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://appv2.rampdefi.com/#/',\r\n  },\r\n  bp: {\r\n    symbol: 'BP',\r\n    address: {\r\n      56: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bunnypark.com/',\r\n  },\r\n  sfund: {\r\n    symbol: 'SFUND',\r\n    address: {\r\n      56: '0x477bc8d23c634c154061869478bce96be6045d12',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://seedify.fund/ ',\r\n  },\r\n  naos: {\r\n    symbol: 'NAOS',\r\n    address: {\r\n      56: '0x758d08864fb6cce3062667225ca10b8f00496cc2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://naos.finance/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  claim?: { recipient: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\n// export const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\nexport const nodes = process.env.REACT_APP_APP_ENV === 'test' ? [process.env.REACT_APP_TEST_NODE] : [process.env.REACT_APP_MAIN_NODE];\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport interface BigNumberToJson {\r\n  type: 'BigNumber'\r\n  hex: string\r\n}\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\n\r\nexport type SerializedBigNumber = string\r\n\r\nexport interface Farm extends FarmConfig {\r\n  tokenAmountMc?: SerializedBigNumber\r\n  quoteTokenAmountMc?: SerializedBigNumber\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  quoteTokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: string\r\n    tokenBalance: string\r\n    stakedBalance: string\r\n    earnings: string\r\n  }\r\n}\r\n\r\nexport interface Pool extends PoolConfig {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface FarmsState {\r\n  data: Farm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: Pool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n  profileAvatars: {\r\n    [key: string]: {\r\n      username: string\r\n      nft: Nft\r\n    }\r\n  }\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  position: BetPosition\r\n  failed: boolean\r\n  startAt: number\r\n  startBlock: number\r\n  startHash: string\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockHash: string\r\n  lockPrice: number\r\n  lockRoundId: string\r\n  closeAt: number\r\n  closeBlock: number\r\n  closeHash: string\r\n  closePrice: number\r\n  closeRoundId: string\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bullAmount: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedAt: number\r\n  claimedBlock: number\r\n  claimedHash: string\r\n  claimedBNB: number\r\n  claimedNetBNB: number\r\n  createdAt: number\r\n  updatedAt: number\r\n  user?: PredictionUser\r\n  round?: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  createdAt: number\r\n  updatedAt: number\r\n  block: number\r\n  totalBets: number\r\n  totalBetsBull: number\r\n  totalBetsBear: number\r\n  totalBNB: number\r\n  totalBNBBull: number\r\n  totalBNBBear: number\r\n  totalBetsClaimed: number\r\n  totalBNBClaimed: number\r\n  winRate: number\r\n  averageBNB: number\r\n  netBNB: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface LedgerData {\r\n  [key: string]: {\r\n    [key: string]: ReduxNodeLedger\r\n  }\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: ReduxNodeRound\r\n}\r\n\r\nexport interface ReduxNodeLedger {\r\n  position: BetPosition\r\n  amount: BigNumberToJson\r\n  claimed: boolean\r\n}\r\n\r\nexport interface NodeLedger {\r\n  position: BetPosition\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface ReduxNodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: BigNumberToJson | null\r\n  closePrice: BigNumberToJson | null\r\n  totalAmount: BigNumberToJson\r\n  bullAmount: BigNumberToJson\r\n  bearAmount: BigNumberToJson\r\n  rewardBaseCalAmount: BigNumberToJson\r\n  rewardAmount: BigNumberToJson\r\n  oracleCalled: boolean\r\n  lockOracleId: string\r\n  closeOracleId: string\r\n}\r\n\r\nexport interface NodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: ethers.BigNumber | null\r\n  closePrice: ethers.BigNumber | null\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n  closeOracleId: string\r\n  lockOracleId: string\r\n}\r\n\r\nexport enum LeaderboardLoadingState {\r\n  INITIAL,\r\n  LOADING,\r\n  IDLE,\r\n}\r\n\r\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\r\n\r\nexport interface LeaderboardFilter {\r\n  address?: string\r\n  orderBy?: string\r\n  timePeriod?: LeaderboardFilterTimePeriod\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  intervalSeconds: number\r\n  minBetAmount: string\r\n  bufferSeconds: number\r\n  lastOraclePrice: string\r\n  history: Bet[]\r\n  totalHistory: number\r\n  currentHistoryPage: number\r\n  hasHistoryLoaded: boolean\r\n  rounds?: RoundData\r\n  ledgers?: LedgerData\r\n  claimableStatuses: {\r\n    [key: string]: boolean\r\n  }\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState\r\n    filters: LeaderboardFilter\r\n    skip: number\r\n    hasMoreResults: boolean\r\n    addressResults: {\r\n      [key: string]: PredictionUser\r\n    }\r\n    results: PredictionUser[]\r\n  }\r\n}\r\n\r\n// Voting\r\n\r\n/* eslint-disable camelcase */\r\n/**\r\n * @see https://hub.snapshot.page/graphql\r\n */\r\nexport interface VoteWhere {\r\n  id?: string\r\n  id_in?: string[]\r\n  voter?: string\r\n  voter_in?: string[]\r\n  proposal?: string\r\n  proposal_in?: string[]\r\n}\r\n\r\nexport enum SnapshotCommand {\r\n  PROPOSAL = 'proposal',\r\n  VOTE = 'vote',\r\n}\r\n\r\nexport enum ProposalType {\r\n  ALL = 'all',\r\n  CORE = 'core',\r\n  COMMUNITY = 'community',\r\n}\r\n\r\nexport enum ProposalState {\r\n  ACTIVE = 'active',\r\n  PENDING = 'pending',\r\n  CLOSED = 'closed',\r\n}\r\n\r\nexport interface Space {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport interface Proposal {\r\n  author: string\r\n  body: string\r\n  choices: string[]\r\n  end: number\r\n  id: string\r\n  snapshot: string\r\n  space: Space\r\n  start: number\r\n  state: ProposalState\r\n  title: string\r\n}\r\n\r\nexport interface Vote {\r\n  id: string\r\n  voter: string\r\n  created: number\r\n  space: Space\r\n  proposal: {\r\n    choices: Proposal['choices']\r\n  }\r\n  choice: number\r\n  metadata?: {\r\n    votingPower: string\r\n    verificationHash: string\r\n  }\r\n  _inValid?: boolean\r\n}\r\n\r\nexport enum VotingStateLoadingStatus {\r\n  INITIAL = 'initial',\r\n  IDLE = 'idle',\r\n  LOADING = 'loading',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface VotingState {\r\n  proposalLoadingStatus: VotingStateLoadingStatus\r\n  proposals: {\r\n    [key: string]: Proposal\r\n  }\r\n  voteLoadingStatus: VotingStateLoadingStatus\r\n  votes: {\r\n    [key: string]: Vote[]\r\n  }\r\n}\r\n\r\nexport interface LotteryRoundUserTickets {\r\n  isLoading?: boolean\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\ninterface LotteryRoundGenerics {\r\n  isLoading?: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  startTime: string\r\n  endTime: string\r\n  treasuryFee: string\r\n  firstTicketId: string\r\n  lastTicketId: string\r\n  finalNumber: number\r\n}\r\n\r\nexport interface LotteryRound extends LotteryRoundGenerics {\r\n  userTickets?: LotteryRoundUserTickets\r\n  priceTicketInCake: BigNumber\r\n  discountDivisor: BigNumber\r\n  amountCollectedInCake: BigNumber\r\n  cakePerBracket: string[]\r\n  countWinnersPerBracket: string[]\r\n  rewardsBreakdown: string[]\r\n}\r\n\r\nexport interface LotteryResponse extends LotteryRoundGenerics {\r\n  priceTicketInCake: SerializedBigNumber\r\n  discountDivisor: SerializedBigNumber\r\n  amountCollectedInCake: SerializedBigNumber\r\n  cakePerBracket: SerializedBigNumber[]\r\n  countWinnersPerBracket: SerializedBigNumber[]\r\n  rewardsBreakdown: SerializedBigNumber[]\r\n}\r\n\r\nexport interface LotteryState {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n  isTransitioning: boolean\r\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\r\n  lotteriesData?: LotteryRoundGraphEntity[]\r\n  userLotteryData?: LotteryUserGraphEntity\r\n}\r\n\r\nexport interface LotteryRoundGraphEntity {\r\n  id: string\r\n  totalUsers: string\r\n  totalTickets: string\r\n  winningTickets: string\r\n  status: LotteryStatus\r\n  finalNumber: string\r\n  startTime: string\r\n  endTime: string\r\n  ticketPrice: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryUserGraphEntity {\r\n  account: string\r\n  totalCake: string\r\n  totalTickets: string\r\n  rounds: UserRound[]\r\n}\r\n\r\nexport interface UserRound {\r\n  claimed: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  endTime: string\r\n  totalTickets: string\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: FarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n  voting: VotingState\r\n  lottery: LotteryState\r\n}\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst priceHelperLps: FarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: null,\r\n    lpSymbol: 'QSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n    },\r\n    token: tokens.qsd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  \r\n  console.log(\"SSSSSSSSSSSs5\")\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  console.log(\"SSSSSSSSSSSs1\")\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  console.log(\"SSSSSSSSSSSs3\")\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n\r\nexport const formatLocalisedCompactNumber = (number: number): string => {\r\n  const codeFromStorage = getLanguageCodeFromLS()\r\n  return new Intl.NumberFormat(codeFromStorage, {\r\n    notation: 'compact',\r\n    compactDisplay: 'long',\r\n    maximumSignificantDigits: 2,\r\n  }).format(number)\r\n}\r\n\r\nexport default formatLocalisedCompactNumber\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\r\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\r\n\r\nexport const getAprData = (pool: Pool, performanceFee: number) => {\r\n  const { isAutoVault, apr } = pool\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\r\n    return { apr: autoApr, autoCompoundFrequency }\r\n  }\r\n  return { apr, autoCompoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\n// const masterChefContract = getMasterchefContract()\r\n// console.log(\"getMasterchefContract2222222\")\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  // const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber('0').toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  // const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber('0').toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","export const REWARD_RATE = 0.97\r\n\r\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\r\nexport const ROUND_BUFFER = 9\r\n\r\nexport const PAST_ROUND_COUNT = 5\r\nexport const FUTURE_ROUND_COUNT = 2\r\n\r\nexport const ROUNDS_PER_PAGE = 1000\r\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  BetPosition,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeLedger,\r\n  ReduxNodeRound,\r\n  Round,\r\n  RoundData,\r\n  PredictionUser,\r\n  HistoryFilter,\r\n} from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  TotalWonMarketResponse,\r\n  UserResponse,\r\n} from './queries'\r\nimport { ROUNDS_PER_PAGE } from './config'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nconst getRoundPosition = (positionResponse: string) => {\r\n  if (positionResponse === 'Bull') {\r\n    return BetPosition.BULL\r\n  }\r\n\r\n  if (positionResponse === 'Bear') {\r\n    return BetPosition.BEAR\r\n  }\r\n\r\n  if (positionResponse === 'House') {\r\n    return BetPosition.HOUSE\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    block: numberOrNull(betResponse.block),\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedAt: numberOrNull(betResponse.claimedAt),\r\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\r\n    claimedHash: betResponse.claimedHash,\r\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\r\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\r\n    createdAt: numberOrNull(betResponse.createdAt),\r\n    updatedAt: numberOrNull(betResponse.updatedAt),\r\n  } as Bet\r\n\r\n  if (betResponse.user) {\r\n    bet.user = transformUserResponse(betResponse.user)\r\n  }\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\r\n  const {\r\n    id,\r\n    createdAt,\r\n    updatedAt,\r\n    block,\r\n    totalBets,\r\n    totalBetsBull,\r\n    totalBetsBear,\r\n    totalBNB,\r\n    totalBNBBull,\r\n    totalBNBBear,\r\n    totalBetsClaimed,\r\n    totalBNBClaimed,\r\n    winRate,\r\n    averageBNB,\r\n    netBNB,\r\n  } = userResponse\r\n\r\n  return {\r\n    id,\r\n    createdAt: numberOrNull(createdAt),\r\n    updatedAt: numberOrNull(updatedAt),\r\n    block: numberOrNull(block),\r\n    totalBets: numberOrNull(totalBets),\r\n    totalBetsBull: numberOrNull(totalBetsBull),\r\n    totalBetsBear: numberOrNull(totalBetsBear),\r\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\r\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\r\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\r\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\r\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\r\n    winRate: winRate ? parseFloat(winRate) : 0,\r\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\r\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\r\n  }\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    position,\r\n    startAt,\r\n    startBlock,\r\n    startHash,\r\n    lockAt,\r\n    lockBlock,\r\n    lockHash,\r\n    lockPrice,\r\n    lockRoundId,\r\n    closeAt,\r\n    closeBlock,\r\n    closeHash,\r\n    closePrice,\r\n    closeRoundId,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bullAmount,\r\n    bearBets,\r\n    bearAmount,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    startHash,\r\n    lockHash,\r\n    lockRoundId,\r\n    closeRoundId,\r\n    closeHash,\r\n    position: getRoundPosition(position),\r\n    epoch: numberOrNull(epoch),\r\n    startAt: numberOrNull(startAt),\r\n    startBlock: numberOrNull(startBlock),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\r\n    closeAt: numberOrNull(closeAt),\r\n    closeBlock: numberOrNull(closeBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\r\n  switch (filter) {\r\n    case HistoryFilter.COLLECTED:\r\n      return bets.filter((bet) => bet.claimed === true)\r\n    case HistoryFilter.UNCOLLECTED:\r\n      return bets.filter((bet) => {\r\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n      })\r\n    case HistoryFilter.ALL:\r\n    default:\r\n      return bets\r\n  }\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const { market } = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n      }\r\n    `,\r\n  )) as { market: TotalWonMarketResponse }\r\n\r\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\r\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - totalBNBTreasury, 0)\r\n}\r\n\r\ntype WhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n\r\nexport const getLedgerData = async (account: string, epochs: number[]) => {\r\n  const address = getPredictionsAddress()\r\n  const ledgerCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'ledger',\r\n    params: [epoch, account],\r\n  }))\r\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\r\n  return response\r\n}\r\n\r\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\r\n\r\ninterface GetPredictionUsersOptions {\r\n  skip?: number\r\n  first?: number\r\n  orderBy?: string\r\n  orderDir?: string\r\n  where?: WhereClause\r\n}\r\n\r\nconst defaultPredictionUserOptions = {\r\n  skip: 0,\r\n  first: LEADERBOARD_RESULTS_PER_PAGE,\r\n  orderBy: 'createdAt',\r\n  orderDir: 'desc',\r\n}\r\n\r\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\r\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\r\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\r\n          ${getUserBaseFields()} \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where, orderBy, orderDir },\r\n  )\r\n  return response.users\r\n}\r\n\r\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUser($id: ID!) {\r\n        user(id: $id) {\r\n          ${getUserBaseFields()}\r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: account.toLowerCase(),\r\n    },\r\n  )\r\n  return response.user\r\n}\r\n\r\nexport const getClaimStatuses = async (\r\n  account: string,\r\n  epochs: number[],\r\n): Promise<PredictionsState['claimableStatuses']> => {\r\n  const address = getPredictionsAddress()\r\n  const claimableCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'claimable',\r\n    params: [epoch, account],\r\n  }))\r\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\r\n\r\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\r\n    const epoch = epochs[index]\r\n    const [claimable] = claimableResponse\r\n\r\n    return {\r\n      ...accum,\r\n      [epoch]: claimable,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport type MarketData = Pick<\r\n  PredictionsState,\r\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\r\n>\r\nexport const getPredictionData = async (): Promise<MarketData> => {\r\n  const address = getPredictionsAddress()\r\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\r\n    address,\r\n    name: method,\r\n  }))\r\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\r\n    predictionsAbi,\r\n    staticCalls,\r\n  )\r\n\r\n  return {\r\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalSeconds: intervalSeconds.toNumber(),\r\n    minBetAmount: minBetAmount.toString(),\r\n    bufferSeconds: bufferSeconds.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\r\n  const address = getPredictionsAddress()\r\n  const calls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'rounds',\r\n    params: [epoch],\r\n  }))\r\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\r\n  return response\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\r\n  return {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp: null,\r\n    closeTimestamp: null,\r\n    lockPrice: null,\r\n    closePrice: null,\r\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\r\n    oracleCalled: false,\r\n    lockOracleId: null,\r\n    closeOracleId: null,\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.epoch.toString()]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\r\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\r\n  amount: ledgerResponse.amount.toJSON(),\r\n  claimed: ledgerResponse.claimed,\r\n})\r\n\r\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\r\n  return ledgers.reduce((accum, ledgerResponse, index) => {\r\n    if (!ledgerResponse) {\r\n      return accum\r\n    }\r\n\r\n    // If the amount is zero that means the user did not bet\r\n    if (ledgerResponse.amount.eq(0)) {\r\n      return accum\r\n    }\r\n\r\n    const epoch = epochs[index].toString()\r\n\r\n    return {\r\n      ...accum,\r\n      [account]: {\r\n        ...accum[account],\r\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Serializes the return from the \"rounds\" call for redux\r\n */\r\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\r\n  const {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp,\r\n    closeTimestamp,\r\n    lockPrice,\r\n    closePrice,\r\n    totalAmount,\r\n    bullAmount,\r\n    bearAmount,\r\n    rewardBaseCalAmount,\r\n    rewardAmount,\r\n    oracleCalled,\r\n    lockOracleId,\r\n    closeOracleId,\r\n  } = response\r\n\r\n  return {\r\n    oracleCalled,\r\n    epoch: epoch.toNumber(),\r\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\r\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\r\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\r\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\r\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\r\n    totalAmount: totalAmount.toJSON(),\r\n    bullAmount: bullAmount.toJSON(),\r\n    bearAmount: bearAmount.toJSON(),\r\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\r\n    rewardAmount: rewardAmount.toJSON(),\r\n    lockOracleId: lockOracleId.toString(),\r\n    closeOracleId: closeOracleId.toString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Parse serialized values back into ethers.BigNumber\r\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\r\n */\r\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\r\n  return Object.keys(data).reduce((accum, key) => {\r\n    const value = data[key]\r\n\r\n    if (value && value?.type === 'BigNumber') {\r\n      return {\r\n        ...accum,\r\n        [key]: ethers.BigNumber.from(value),\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [key]: value,\r\n    }\r\n  }, {}) as K\r\n}\r\n\r\nexport const fetchUsersRoundsLength = async (account: string) => {\r\n  try {\r\n    const contract = getPredictionsContract()\r\n    const length = await contract.getUserRoundsLength(account)\r\n    return length\r\n  } catch {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches rounds a user has participated in\r\n */\r\nexport const fetchUserRounds = async (\r\n  account: string,\r\n  cursor = 0,\r\n  size = ROUNDS_PER_PAGE,\r\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\r\n  const contract = getPredictionsContract()\r\n\r\n  try {\r\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\r\n\r\n    return rounds.reduce((accum, round, index) => {\r\n      return {\r\n        ...accum,\r\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\r\n      }\r\n    }, {})\r\n  } catch {\r\n    // When the results run out the contract throws an error.\r\n    return null\r\n  }\r\n}\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\r\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\r\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\r\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\r\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\r\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\r\n\r\n/**\r\n * V1 will be deprecated but is still used to claim old rounds\r\n */\r\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\r\n\r\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\r\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\r\n","export interface UserResponse {\r\n  id: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  totalBets: string\r\n  totalBetsBull: string\r\n  totalBetsBear: string\r\n  totalBNB: string\r\n  totalBNBBull: string\r\n  totalBNBBear: string\r\n  totalBetsClaimed: string\r\n  totalBNBClaimed: string\r\n  winRate: string\r\n  averageBNB: string\r\n  netBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedAt: string\r\n  claimedBlock: string\r\n  claimedHash: string\r\n  claimedBNB: string\r\n  claimedNetBNB: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  position: string\r\n  failed: boolean\r\n  startAt: string\r\n  startBlock: string\r\n  startHash: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockHash: string\r\n  lockPrice: string\r\n  lockRoundId: string\r\n  closeAt: string\r\n  closeBlock: string\r\n  closeHash: string\r\n  closePrice: string\r\n  closeRoundId: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bullBets: string\r\n  bullAmount: string\r\n  bearBets: string\r\n  bearAmount: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  position\r\n  failed\r\n  startAt\r\n  startBlock\r\n  startHash\r\n  lockAt\r\n  lockBlock\r\n  lockHash\r\n  lockPrice\r\n  lockRoundId\r\n  closeAt\r\n  closeBlock\r\n  closeHash\r\n  closePrice\r\n  closeRoundId\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n id\r\n hash  \r\n amount\r\n position\r\n claimed\r\n claimedAt\r\n claimedHash\r\n claimedBlock\r\n claimedBNB\r\n claimedNetBNB\r\n createdAt\r\n updatedAt\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  createdAt\r\n  updatedAt\r\n  block\r\n  totalBets\r\n  totalBetsBull\r\n  totalBetsBear\r\n  totalBNB\r\n  totalBNBBull\r\n  totalBNBBear\r\n  totalBetsClaimed\r\n  totalBNBClaimed\r\n  winRate\r\n  averageBNB\r\n  netBNB\r\n`\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport range from 'lodash/range'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  HistoryFilter,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeRound,\r\n  BetPosition,\r\n  LeaderboardLoadingState,\r\n  PredictionUser,\r\n  LeaderboardFilter,\r\n  State,\r\n} from 'state/types'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  FUTURE_ROUND_COUNT,\r\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\r\n  PAST_ROUND_COUNT,\r\n  ROUNDS_PER_PAGE,\r\n  ROUND_BUFFER,\r\n} from './config'\r\nimport {\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  makeFutureRoundResponse,\r\n  makeRoundData,\r\n  getRoundsData,\r\n  getPredictionData,\r\n  MarketData,\r\n  getLedgerData,\r\n  makeLedgerData,\r\n  serializePredictionsRoundsResponse,\r\n  getClaimStatuses,\r\n  fetchUsersRoundsLength,\r\n  fetchUserRounds,\r\n  getPredictionUsers,\r\n  transformUserResponse,\r\n  LEADERBOARD_RESULTS_PER_PAGE,\r\n  getPredictionUser,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  intervalSeconds: 300,\r\n  minBetAmount: '10000000000000',\r\n  bufferSeconds: 60,\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: [],\r\n  totalHistory: 0,\r\n  currentHistoryPage: 1,\r\n  hasHistoryLoaded: false,\r\n  ledgers: {},\r\n  claimableStatuses: {},\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState.INITIAL,\r\n    filters: {\r\n      address: null,\r\n      orderBy: 'netBNB',\r\n      timePeriod: 'all',\r\n    },\r\n    skip: 0,\r\n    hasMoreResults: true,\r\n    addressResults: {},\r\n    results: [],\r\n  },\r\n}\r\n\r\n// Thunks\r\ntype PredictionInitialization = Pick<\r\n  PredictionsState,\r\n  | 'status'\r\n  | 'currentEpoch'\r\n  | 'intervalSeconds'\r\n  | 'minBetAmount'\r\n  | 'rounds'\r\n  | 'ledgers'\r\n  | 'claimableStatuses'\r\n  | 'bufferSeconds'\r\n>\r\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\r\n  'predictions/intialize',\r\n  async (account = null) => {\r\n    // Static values\r\n    const marketData = await getPredictionData()\r\n    const epochs =\r\n      marketData.currentEpoch > PAST_ROUND_COUNT\r\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\r\n        : [marketData.currentEpoch]\r\n\r\n    // Round data\r\n    const roundsResponse = await getRoundsData(epochs)\r\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n\r\n    const initializedData = {\r\n      ...marketData,\r\n      rounds: initialRoundData,\r\n      ledgers: {},\r\n      claimableStatuses: {},\r\n    }\r\n\r\n    if (!account) {\r\n      return initializedData\r\n    }\r\n\r\n    // Bet data\r\n    const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n    // Claim statuses\r\n    const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n    return merge({}, initializedData, {\r\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\r\n      claimableStatuses,\r\n    })\r\n  },\r\n)\r\n\r\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\r\n  const predictionContract = getPredictionsContract()\r\n  const response = await predictionContract.rounds(epoch)\r\n  return serializePredictionsRoundsResponse(response)\r\n})\r\n\r\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\r\n  'predictions/fetchRounds',\r\n  async (epochs) => {\r\n    const rounds = await getRoundsData(epochs)\r\n    return rounds.reduce((accum, round) => {\r\n      if (!round) {\r\n        return accum\r\n      }\r\n\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n  },\r\n)\r\n\r\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\r\n  const marketData = await getPredictionData()\r\n  return marketData\r\n})\r\n\r\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\r\n  'predictions/fetchLedgerData',\r\n  async ({ account, epochs }) => {\r\n    const ledgers = await getLedgerData(account, epochs)\r\n    return makeLedgerData(account, ledgers, epochs)\r\n  },\r\n)\r\n\r\nexport const fetchClaimableStatuses = createAsyncThunk<\r\n  PredictionsState['claimableStatuses'],\r\n  { account: string; epochs: number[] }\r\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\r\n  const ledgers = await getClaimStatuses(account, epochs)\r\n  return ledgers\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const fetchNodeHistory = createAsyncThunk<\r\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\r\n  { account: string; page?: number }\r\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\r\n  const userRoundsLength = await fetchUsersRoundsLength(account)\r\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\r\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\r\n\r\n  if (userRoundsLength.eq(0)) {\r\n    return emptyResult\r\n  }\r\n\r\n  if (page > maxPages) {\r\n    return emptyResult\r\n  }\r\n\r\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\r\n\r\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\r\n  const size =\r\n    maxPages === page\r\n      ? userRoundsLength\r\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\r\n          .toNumber()\r\n      : ROUNDS_PER_PAGE\r\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\r\n\r\n  if (!userRounds) {\r\n    return emptyResult\r\n  }\r\n\r\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\r\n  const roundData = await getRoundsData(epochs)\r\n  const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n  // Turn the data from the node into an Bet object that comes from the graph\r\n  const bets: Bet[] = roundData.reduce((accum, round) => {\r\n    const reduxRound = serializePredictionsRoundsResponse(round)\r\n    const ledger = userRounds[reduxRound.epoch]\r\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\r\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\r\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\r\n\r\n    const getRoundPosition = () => {\r\n      if (!closePrice) {\r\n        return null\r\n      }\r\n\r\n      if (round.closePrice.eq(round.lockPrice)) {\r\n        return BetPosition.HOUSE\r\n      }\r\n\r\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\r\n    }\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: null,\r\n        hash: null,\r\n        amount: parseFloat(formatUnits(ledgerAmount)),\r\n        position: ledger.position,\r\n        claimed: ledger.claimed,\r\n        claimedAt: null,\r\n        claimedHash: null,\r\n        claimedBNB: 0,\r\n        claimedNetBNB: 0,\r\n        createdAt: null,\r\n        updatedAt: null,\r\n        block: 0,\r\n        round: {\r\n          id: null,\r\n          epoch: round.epoch.toNumber(),\r\n          failed: false,\r\n          startBlock: null,\r\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\r\n          startHash: null,\r\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\r\n          lockBlock: null,\r\n          lockPrice,\r\n          lockHash: null,\r\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\r\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\r\n          closeHash: null,\r\n          closeAt: null,\r\n          closePrice,\r\n          closeBlock: null,\r\n          totalBets: 0,\r\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\r\n          bullBets: 0,\r\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\r\n          bearBets: 0,\r\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\r\n          position: getRoundPosition(),\r\n        },\r\n      },\r\n    ]\r\n  }, [])\r\n\r\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\r\n})\r\n\r\n// Leaderboard\r\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\r\n  'predictions/filterLeaderboard',\r\n  async ({ filters }) => {\r\n    const usersResponse = await getPredictionUsers({\r\n      skip: 0,\r\n      orderBy: filters.orderBy,\r\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\r\n    })\r\n\r\n    return { results: usersResponse.map(transformUserResponse) }\r\n  },\r\n)\r\n\r\nexport const fetchAddressResult = createAsyncThunk<\r\n  { account: string; data: PredictionUser },\r\n  string,\r\n  { rejectValue: string }\r\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\r\n  const userResponse = await getPredictionUser(account)\r\n\r\n  if (!userResponse) {\r\n    return rejectWithValue(account)\r\n  }\r\n\r\n  return { account, data: transformUserResponse(userResponse) }\r\n})\r\n\r\nexport const filterNextPageLeaderboard = createAsyncThunk<\r\n  { results: PredictionUser[]; skip: number },\r\n  number,\r\n  { state: State }\r\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\r\n  const state = getState()\r\n  const usersResponse = await getPredictionUsers({\r\n    skip,\r\n    orderBy: state.predictions.leaderboard.filters.orderBy,\r\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\r\n  })\r\n\r\n  return { results: usersResponse.map(transformUserResponse), skip }\r\n})\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\r\n      state.leaderboard.filters = {\r\n        ...state.leaderboard.filters,\r\n        ...action.payload,\r\n      }\r\n\r\n      // Anytime we filters change we need to reset back to page 1\r\n      state.leaderboard.skip = 0\r\n      state.leaderboard.hasMoreResults = true\r\n    },\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Leaderboard filter\r\n    builder.addCase(filterLeaderboard.pending, (state) => {\r\n      // Only mark as loading if we come from IDLE. This allows initialization.\r\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\r\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n      }\r\n    })\r\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\r\n      const { results } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = results\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n\r\n      // Populate address results to reduce calls\r\n      state.leaderboard.addressResults = {\r\n        ...state.leaderboard.addressResults,\r\n        ...results.reduce((accum, result) => {\r\n          return {\r\n            ...accum,\r\n            [result.id]: result,\r\n          }\r\n        }, {}),\r\n      }\r\n    })\r\n\r\n    // Leaderboard account result\r\n    builder.addCase(fetchAddressResult.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\r\n      const { account, data } = action.payload\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[account] = data\r\n    })\r\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[action.payload] = null\r\n    })\r\n\r\n    // Leaderboard next page\r\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\r\n      const { results, skip } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\r\n      state.leaderboard.skip = skip\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n    })\r\n\r\n    // Claimable statuses\r\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\r\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\r\n    })\r\n\r\n    // Ledger (bet) records\r\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\r\n      state.ledgers = merge({}, state.ledgers, action.payload)\r\n    })\r\n\r\n    // Get static market data\r\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\r\n\r\n      // If the round has change add a new future round\r\n      if (state.currentEpoch !== currentEpoch) {\r\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\r\n        const futureRound = makeFutureRoundResponse(\r\n          newestRound.epoch + 1,\r\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\r\n        )\r\n\r\n        state.rounds[futureRound.epoch] = futureRound\r\n      }\r\n\r\n      state.status = status\r\n      state.currentEpoch = currentEpoch\r\n      state.intervalSeconds = intervalSeconds\r\n      state.minBetAmount = minBetAmount\r\n    })\r\n\r\n    // Initialize predictions\r\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\r\n        action.payload\r\n      const futureRounds: ReduxNodeRound[] = []\r\n      const currentRound = rounds[currentEpoch]\r\n\r\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\r\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n        currentEpoch,\r\n        intervalSeconds,\r\n        bufferSeconds,\r\n        claimableStatuses,\r\n        ledgers,\r\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\r\n      }\r\n    })\r\n\r\n    // Get single round\r\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, {\r\n        [action.payload.epoch.toString()]: action.payload,\r\n      })\r\n    })\r\n\r\n    // Get multiple rounds\r\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, action.payload)\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history[account] = merge([], state.history[account] ?? [], bets)\r\n    })\r\n\r\n    // History from the node\r\n    builder.addCase(fetchNodeHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\r\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history = page === 1 ? bets : [...state.history, ...bets]\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\r\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\r\n      state.totalHistory = totalHistory\r\n      state.currentHistoryPage = page\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  setPredictionStatus,\r\n  setLastOraclePrice,\r\n  markAsCollected,\r\n  setLeaderboardFilter,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n  {\r\n    id: '515010001',\r\n    type: 'participation',\r\n    title: 'Lottie',\r\n    description: 'Joined a round in the early days of Lottery V2',\r\n    badge: 'lottie.svg',\r\n  },\r\n  {\r\n    id: '515020001',\r\n    type: 'participation',\r\n    title: 'Lucky',\r\n    description: 'Won a round in the early days of Lottery V2',\r\n    badge: 'lucky.svg',\r\n  },\r\n  {\r\n    id: '515030001',\r\n    type: 'participation',\r\n    title: 'Baller',\r\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\r\n    badge: 'baller.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport { nftSources } from 'config/constants/nfts'\r\nimport { NftType } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { ethers } from 'ethers'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\r\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\r\n          const tokenId = tokenIdBn.toNumber()\r\n\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [tokenId, walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const balanceOfResponse = await contract.balanceOf(account)\r\n      const balanceOf = balanceOfResponse.toNumber()\r\n\r\n      if (balanceOf === 0) {\r\n        return []\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import request, { gql } from 'graphql-request'\r\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\r\n  const response: { proposals: Proposal[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\r\n        proposals(\r\n          first: $first\r\n          skip: $skip\r\n          orderBy: \"end\"\r\n          orderDirection: desc\r\n          where: { space_in: \"cake.eth\", state: $state }\r\n        ) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, state },\r\n  )\r\n  return response.proposals\r\n}\r\n\r\nexport const getProposal = async (id: string): Promise<Proposal> => {\r\n  const response: { proposal: Proposal } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposal($id: String) {\r\n        proposal(id: $id) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { id },\r\n  )\r\n  return response.proposal\r\n}\r\n\r\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\r\n  const response: { votes: Vote[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\r\n        votes(first: $first, skip: $skip, where: $where) {\r\n          id\r\n          voter\r\n          created\r\n          choice\r\n          space {\r\n            id\r\n            name\r\n          }\r\n          proposal {\r\n            choices\r\n          }\r\n          metadata\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.votes\r\n}\r\n\r\nexport const getVoteVerificationStatuses = async (\r\n  votes: Vote[],\r\n  block?: number,\r\n): Promise<{ [key: string]: boolean }> => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n\r\n  const votesToVerify = votes.map((vote) => ({\r\n    address: vote.voter,\r\n    verificationHash: vote.metadata?.verificationHash,\r\n    total: vote.metadata?.votingPower,\r\n  }))\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      block: blockNumber,\r\n      votes: votesToVerify,\r\n    }),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return votes.reduce((accum, vote) => {\r\n    return {\r\n      ...accum,\r\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\r\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  return new Promise((resolve, reject) => {\r\n    let votes: Vote[] = []\r\n\r\n    const fetchVoteChunk = async (newSkip: number) => {\r\n      try {\r\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\r\n\r\n        if (voteChunk.length === 0) {\r\n          resolve(votes)\r\n        } else {\r\n          votes = [...votes, ...voteChunk]\r\n          fetchVoteChunk(newSkip + votesPerChunk)\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    fetchVoteChunk(0)\r\n  })\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { merge } from 'lodash'\r\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\r\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\r\n\r\nconst initialState: VotingState = {\r\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  proposals: {},\r\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  votes: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\r\n  'voting/fetchProposals',\r\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\r\n    const response = await getProposals(first, skip, state)\r\n    return response\r\n  },\r\n)\r\n\r\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\r\n  const response = await getProposal(proposalId)\r\n  return response\r\n})\r\n\r\nexport const fetchVotes = createAsyncThunk<\r\n  { votes: Vote[]; proposalId: string },\r\n  { proposalId: string; block?: number }\r\n>('voting/fetchVotes', async ({ proposalId, block }) => {\r\n  const response = await getAllVotes(proposalId, block)\r\n  return { votes: response, proposalId }\r\n})\r\n\r\nexport const verifyVotes = createAsyncThunk<\r\n  { results: { [key: string]: boolean }; proposalId: string },\r\n  { proposalId: string; snapshot?: string },\r\n  { state: State }\r\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\r\n  const state = getState()\r\n  const proposalVotes = state.voting.votes[proposalId]\r\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\r\n  return { results: response, proposalId }\r\n})\r\n\r\nexport const votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Verify Votes\r\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\r\n      const { proposalId, results } = action.payload\r\n\r\n      if (state.votes[proposalId]) {\r\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\r\n          return {\r\n            ...vote,\r\n            _inValid: results[vote.id] === false,\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // Fetch Proposals\r\n    builder.addCase(fetchProposals.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\r\n      const proposals = action.payload.reduce((accum, proposal) => {\r\n        return {\r\n          ...accum,\r\n          [proposal.id]: proposal,\r\n        }\r\n      }, {})\r\n\r\n      state.proposals = merge({}, state.proposals, proposals)\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Proposal\r\n    builder.addCase(fetchProposal.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\r\n      state.proposals[action.payload.id] = action.payload\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Votes\r\n    builder.addCase(fetchVotes.pending, (state) => {\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\r\n      const { votes, proposalId } = action.payload\r\n\r\n      state.votes = {\r\n        ...state.votes,\r\n        [proposalId]: votes,\r\n      }\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n  },\r\n})\r\n\r\nexport default votingSlice.reducer\r\n","export const TICKET_LIMIT_PER_REQUEST = 2500\r\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\r\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\nimport { useMemo } from 'react'\r\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\r\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\r\n  const {\r\n    status,\r\n    startTime,\r\n    endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee,\r\n    firstTicketId,\r\n    lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber,\r\n    cakePerBracket,\r\n    countWinnersPerBracket,\r\n    rewardsBreakdown,\r\n  } = response\r\n\r\n  const statusKey = Object.keys(LotteryStatus)[status]\r\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\r\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\r\n    ethersToSerializedBigNumber(winnersInBracket),\r\n  )\r\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\r\n\r\n  return {\r\n    isLoading: false,\r\n    lotteryId,\r\n    status: LotteryStatus[statusKey],\r\n    startTime: startTime?.toString(),\r\n    endTime: endTime?.toString(),\r\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\r\n    discountDivisor: discountDivisor?.toString(),\r\n    treasuryFee: treasuryFee?.toString(),\r\n    firstTicketId: firstTicketId?.toString(),\r\n    lastTicketId: lastTicketId?.toString(),\r\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\r\n    finalNumber,\r\n    cakePerBracket: serializedCakePerBracket,\r\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\r\n    rewardsBreakdown: serializedRewardsBreakdown,\r\n  }\r\n}\r\n\r\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\r\n  return {\r\n    isLoading: true,\r\n    lotteryId,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n  }\r\n}\r\n\r\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\r\n  try {\r\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\r\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\r\n  } catch (error) {\r\n    return processViewLotteryErrorResponse(lotteryId)\r\n  }\r\n}\r\n\r\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\r\n  const calls = lotteryIds.map((id) => ({\r\n    name: 'viewLottery',\r\n    address: getLotteryV2Address(),\r\n    params: [id],\r\n  }))\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\r\n    const processedResponses = multicallRes.map((res, index) =>\r\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\r\n    )\r\n    return processedResponses\r\n  } catch (error) {\r\n    console.error(error)\r\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\r\n  try {\r\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\r\n      address: getLotteryV2Address(),\r\n      name: method,\r\n    }))\r\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\r\n      lotteryV2Abi,\r\n      calls,\r\n    )) as ethers.BigNumber[][]\r\n\r\n    return {\r\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\r\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      currentLotteryId: null,\r\n      maxNumberTicketsPerBuyOrClaim: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\r\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\r\n  const roundIds = []\r\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\r\n    roundIds.push(currentIdAsInt - i)\r\n  }\r\n  return roundIds.map((roundId) => roundId.toString())\r\n}\r\n\r\nexport const useProcessLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = useMemo(() => {\r\n    return new BigNumber(discountDivisorAsString)\r\n  }, [discountDivisorAsString])\r\n\r\n  const priceTicketInCake = useMemo(() => {\r\n    return new BigNumber(priceTicketInCakeAsString)\r\n  }, [priceTicketInCakeAsString])\r\n\r\n  const amountCollectedInCake = useMemo(() => {\r\n    return new BigNumber(amountCollectedInCakeAsString)\r\n  }, [amountCollectedInCakeAsString])\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n\r\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\r\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\r\n  return claimedTickets.length > 0\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\r\n\r\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype LotteriesWhere = { id_in?: string[] }\r\n\r\nconst applyNodeDataToLotteriesGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphResponse: LotteryRoundGraphEntity[],\r\n): LotteryRoundGraphEntity[] => {\r\n  //   If no graph response - return node data\r\n  if (graphResponse.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        finalNumber: nodeRound.finalNumber.toString(),\r\n        startTime: nodeRound.startTime,\r\n        status: nodeRound.status,\r\n        id: nodeRound.lotteryId.toString(),\r\n        ticketPrice: nodeRound.priceTicketInCake,\r\n        totalTickets: '',\r\n        totalUsers: '',\r\n        winningTickets: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  // Populate all nodeRound data with supplementary graphResponse round data when available\r\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\r\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      finalNumber: nodeRoundData.finalNumber.toString(),\r\n      startTime: nodeRoundData.startTime,\r\n      status: nodeRoundData.status,\r\n      id: nodeRoundData.lotteryId,\r\n      ticketPrice: graphRoundData?.ticketPrice,\r\n      totalTickets: graphRoundData?.totalTickets,\r\n      totalUsers: graphRoundData?.totalUsers,\r\n      winningTickets: graphRoundData?.winningTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = graphResponse\r\n    .map((graphRound) => graphRound?.id)\r\n    .indexOf(lastCombinedDataRound?.id)\r\n\r\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteries = async (\r\n  first = MAX_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: LotteriesWhere = {},\r\n): Promise<LotteryRoundGraphEntity[]> => {\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\r\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n            id\r\n            totalUsers\r\n            totalTickets\r\n            winningTickets\r\n            status\r\n            finalNumber\r\n            startTime\r\n            endTime\r\n            ticketPrice\r\n          }\r\n        }\r\n      `,\r\n      { skip, first, where },\r\n    )\r\n    return response.lotteries\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\r\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\r\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\r\n  const graphResponse = await getGraphLotteries()\r\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\r\n  return mergedData\r\n}\r\n\r\nexport default getLotteriesData\r\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { UserTicketsResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const viewUserInfoForLotteryId = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  cursor: number,\r\n  perRequestLimit: number,\r\n): Promise<LotteryTicket[]> => {\r\n  try {\r\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\r\n    return processRawTicketsResponse(data)\r\n  } catch (error) {\r\n    console.error('viewUserInfoForLotteryId', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\r\n  let cursor = 0\r\n  let numReturned = TICKET_LIMIT_PER_REQUEST\r\n  const ticketData = []\r\n\r\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\r\n    cursor += TICKET_LIMIT_PER_REQUEST\r\n    numReturned = response.length\r\n    ticketData.push(...response)\r\n  }\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  idsToCheck: string[],\r\n  account: string,\r\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\r\n  const ticketsForMultipleRounds = []\r\n  for (let i = 0; i < idsToCheck.length; i += 1) {\r\n    const roundId = idsToCheck[i]\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\r\n    ticketsForMultipleRounds.push({\r\n      roundId,\r\n      userTickets: ticketsForRound,\r\n    })\r\n  }\r\n  return ticketsForMultipleRounds\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\r\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\r\n\r\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype UserLotteriesWhere = { lottery_in?: string[] }\r\n\r\nconst applyNodeDataToUserGraphResponse = (\r\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\r\n  userGraphData: UserRound[],\r\n  lotteryNodeData: LotteryResponse[],\r\n): UserRound[] => {\r\n  //   If no graph rounds response - return node data\r\n  if (userGraphData.length === 0) {\r\n    return lotteryNodeData.map((nodeRound) => {\r\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        status: nodeRound.status,\r\n        lotteryId: nodeRound.lotteryId.toString(),\r\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\r\n        tickets: ticketDataForRound.userTickets,\r\n      }\r\n    })\r\n  }\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\r\n    const userGraphRound = userGraphData.find(\r\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\r\n    )\r\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      status: nodeRoundData.status,\r\n      lotteryId: nodeRoundData.lotteryId.toString(),\r\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\r\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\r\n      tickets: userNodeRound.userTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = userGraphData\r\n    .map((graphRound) => graphRound?.lotteryId)\r\n    .indexOf(lastCombinedDataRound?.lotteryId)\r\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteryUser = async (\r\n  account: string,\r\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: UserLotteriesWhere = {},\r\n): Promise<LotteryUserGraphEntity> => {\r\n  let user\r\n  const blankUser = {\r\n    account,\r\n    totalCake: '',\r\n    totalTickets: '',\r\n    rounds: [],\r\n  }\r\n\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\r\n          user(id: $account) {\r\n            id\r\n            totalTickets\r\n            totalCake\r\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n              id\r\n              lottery {\r\n                id\r\n                endTime\r\n                status\r\n              }\r\n              claimed\r\n              totalTickets\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { account: account.toLowerCase(), first, skip, where },\r\n    )\r\n    const userRes = response.user\r\n\r\n    // If no user returned - return blank user\r\n    if (!userRes) {\r\n      user = blankUser\r\n    } else {\r\n      user = {\r\n        account: userRes.id,\r\n        totalCake: userRes.totalCake,\r\n        totalTickets: userRes.totalTickets,\r\n        rounds: userRes.rounds.map((round) => {\r\n          return {\r\n            lotteryId: round?.lottery?.id,\r\n            endTime: round?.lottery?.endTime,\r\n            claimed: round?.claimed,\r\n            totalTickets: round?.totalTickets,\r\n            status: round?.lottery?.status.toLowerCase(),\r\n          }\r\n        }),\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    user = blankUser\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\r\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\r\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\r\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\r\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\r\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\r\n  const graphResponse = await getGraphLotteryUser(account)\r\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\r\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\r\n  return graphResponseWithNodeRounds\r\n}\r\n\r\nexport default getUserLotteryData\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\r\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\r\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\r\nimport getLotteriesData from './getLotteriesData'\r\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\r\n\r\ninterface PublicLotteryData {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n}\r\n\r\nconst initialState: LotteryState = {\r\n  currentLotteryId: null,\r\n  isTransitioning: false,\r\n  maxNumberTicketsPerBuyOrClaim: null,\r\n  currentRound: {\r\n    isLoading: true,\r\n    lotteryId: null,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n    userTickets: {\r\n      isLoading: true,\r\n      tickets: [],\r\n    },\r\n  },\r\n  lotteriesData: null,\r\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\r\n}\r\n\r\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\r\n  'lottery/fetchCurrentLottery',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteryInfo = await fetchLottery(currentLotteryId)\r\n    return lotteryInfo\r\n  },\r\n)\r\n\r\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\r\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\r\n  return currentIdAndMaxBuy\r\n})\r\n\r\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\r\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\r\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\r\n  const userTickets = userParticipationInCurrentRound?.tickets\r\n\r\n  // User has not bought tickets for the current lottery, or there has been an error\r\n  if (!userTickets || userTickets.length === 0) {\r\n    return { userTickets: null, userLotteries: userLotteriesRes }\r\n  }\r\n\r\n  return { userTickets, userLotteries: userLotteriesRes }\r\n})\r\n\r\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\r\n  'lottery/fetchPublicLotteries',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteries = await getLotteriesData(currentLotteryId)\r\n    return lotteries\r\n  },\r\n)\r\n\r\nexport const fetchUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\r\n  return userLotteries\r\n})\r\n\r\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; skip?: number }\r\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\r\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\r\n  return additionalUserLotteries\r\n})\r\n\r\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\r\n  `lottery/setIsTransitioning`,\r\n  async ({ isTransitioning }) => {\r\n    return { isTransitioning }\r\n  },\r\n)\r\n\r\nexport const LotterySlice = createSlice({\r\n  name: 'Lottery',\r\n  initialState,\r\n  reducers: {\r\n    setLotteryPublicData: (state, action) => {\r\n      state = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\r\n      state.currentRound = { ...state.currentRound, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\r\n      state.currentLotteryId = action.payload.currentLotteryId\r\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\r\n    })\r\n    builder.addCase(\r\n      fetchUserTicketsAndLotteries.fulfilled,\r\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\r\n        state.currentRound.userTickets.isLoading = false\r\n        state.currentRound.userTickets.tickets = action.payload.userTickets\r\n        state.userLotteryData = action.payload.userLotteries\r\n      },\r\n    )\r\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\r\n      state.lotteriesData = action.payload\r\n    })\r\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      state.userLotteryData = action.payload\r\n    })\r\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\r\n      state.userLotteryData.rounds = mergedRounds\r\n    })\r\n    builder.addCase(\r\n      setLotteryIsTransitioning.fulfilled,\r\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\r\n        state.isTransitioning = action.payload.isTransitioning\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLotteryPublicData } = LotterySlice.actions\r\n\r\nexport default LotterySlice.reducer\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { Transaction } from 'state/info/types'\r\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\r\n\r\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\r\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\r\n  'info/protocol/updateProtocolChartData',\r\n)\r\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\r\n  'info/protocol/updateProtocolTransactions',\r\n)\r\n\r\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\r\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\r\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\r\n  'info/pools/updatePoolChartData',\r\n)\r\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\r\n  'info/pools/updatePoolTransactions',\r\n)\r\n\r\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\r\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\r\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\r\n  'info/tokens/addTokenPoolAddresses',\r\n)\r\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\r\n  'info/tokens/updateTokenChartData',\r\n)\r\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\r\n  'info/tokens/updateTokenTransactions',\r\n)\r\nexport const updateTokenPriceData = createAction<{\r\n  tokenAddress: string\r\n  secondsInterval: number\r\n  priceData?: PriceChartEntry[]\r\n  oldestFetchedTimestamp: number\r\n}>('info/tokens/updateTokenPriceData')\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { InfoState } from './types'\r\nimport {\r\n  updateProtocolData,\r\n  updateProtocolChartData,\r\n  updateProtocolTransactions,\r\n  updatePoolData,\r\n  addPoolKeys,\r\n  updatePoolChartData,\r\n  updatePoolTransactions,\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addTokenPoolAddresses,\r\n  updateTokenChartData,\r\n  updateTokenPriceData,\r\n  updateTokenTransactions,\r\n} from './actions'\r\n\r\nconst initialState: InfoState = {\r\n  protocol: {\r\n    overview: undefined,\r\n    chartData: undefined,\r\n    transactions: undefined,\r\n  },\r\n  pools: { byAddress: {} },\r\n  tokens: { byAddress: {} },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    // Protocol actions\r\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\r\n      state.protocol.overview = protocolData\r\n    })\r\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\r\n      state.protocol.chartData = chartData\r\n    })\r\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\r\n      state.protocol.transactions = transactions\r\n    })\r\n    // Pools actions\r\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\r\n      pools.forEach((poolData) => {\r\n        state.pools.byAddress[poolData.address] = {\r\n          ...state.pools.byAddress[poolData.address],\r\n          data: poolData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\r\n      poolAddresses.forEach((address) => {\r\n        if (!state.pools.byAddress[address]) {\r\n          state.pools.byAddress[address] = {\r\n            data: undefined,\r\n            chartData: undefined,\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\r\n    })\r\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\r\n    })\r\n    // Tokens actions\r\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\r\n      tokens.forEach((tokenData) => {\r\n        state.tokens.byAddress[tokenData.address] = {\r\n          ...state.tokens.byAddress[tokenData.address],\r\n          data: tokenData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\r\n      tokenAddresses.forEach((address) => {\r\n        if (!state.tokens.byAddress[address]) {\r\n          state.tokens.byAddress[address] = {\r\n            poolAddresses: undefined,\r\n            data: undefined,\r\n            chartData: undefined,\r\n            priceData: {},\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\r\n    })\r\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\r\n    })\r\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\r\n    })\r\n    .addCase(\r\n      updateTokenPriceData,\r\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\r\n        state.tokens.byAddress[tokenAddress] = {\r\n          ...state.tokens.byAddress[tokenAddress],\r\n          priceData: {\r\n            ...state.tokens.byAddress[tokenAddress].priceData,\r\n            [secondsInterval]: priceData,\r\n            oldestFetchedTimestamp,\r\n          },\r\n        }\r\n      },\r\n    ),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  updateUserSingleHopOnly,\r\n  updateGasPrice,\r\n  muteAudio,\r\n  unmuteAudio,\r\n  toggleTheme,\r\n  updateUserFarmStakedOnly,\r\n  FarmStakedOnly,\r\n  addWatchlistToken,\r\n  addWatchlistPool,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n  userFarmStakedOnly: FarmStakedOnly\r\n  gasPrice: string\r\n  watchlistTokens: string[]\r\n  watchlistPools: string[]\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n  gasPrice: GAS_PRICE_GWEI.default,\r\n  watchlistTokens: [],\r\n  watchlistPools: [],\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    })\r\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n      state.userFarmStakedOnly = userFarmStakedOnly\r\n    })\r\n    .addCase(updateGasPrice, (state, action) => {\r\n      state.gasPrice = action.payload.gasPrice\r\n    })\r\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\r\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\r\n      const tokenWatchlist = state.watchlistTokens ?? []\r\n      if (!tokenWatchlist.includes(address)) {\r\n        state.watchlistTokens = [...tokenWatchlist, address]\r\n      } else {\r\n        // Remove token from watchlist\r\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\r\n        state.watchlistTokens = newTokens\r\n      }\r\n    })\r\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\r\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\r\n      const poolsWatchlist = state.watchlistPools ?? []\r\n      if (!poolsWatchlist.includes(address)) {\r\n        state.watchlistPools = [...poolsWatchlist, address]\r\n      } else {\r\n        // Remove pool from watchlist\r\n        const newPools = state.watchlistPools.filter((x) => x !== address)\r\n        state.watchlistPools = newPools\r\n      }\r\n    }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  claim?: { recipient: string }\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: state.typedValue,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n        otherTypedValue: '',\r\n      }\r\n    }),\r\n)\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\r\n\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set(),\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\nimport votingReducer from './voting'\r\nimport lotteryReducer from './lottery'\r\nimport infoReducer from './info'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n    voting: votingReducer,\r\n    lottery: lotteryReducer,\r\n    info: infoReducer,\r\n\r\n    // Exchange\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store\r\n","import { ReactNode } from 'react'\r\n\r\nexport const types = {\r\n  SUCCESS: 'success',\r\n  DANGER: 'danger',\r\n  WARNING: 'warning',\r\n  INFO: 'info',\r\n}\r\n\r\nexport type Types = typeof types[keyof typeof types]\r\n\r\nexport interface Toast {\r\n  id: string\r\n  type: Types\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nexport interface ToastContainerProps {\r\n  toasts: Toast[]\r\n  stackSpacing?: number\r\n  ttl?: number\r\n  onRemove: (id: string) => void\r\n}\r\n\r\nexport interface ToastProps {\r\n  toast: Toast\r\n  onRemove: ToastContainerProps['onRemove']\r\n  ttl: number\r\n  style: Partial<CSSStyleDeclaration>\r\n}\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\r\nimport { ToastProps, types } from './types'\r\n\r\nconst alertTypeMap = {\r\n  [types.INFO]: alertVariants.INFO,\r\n  [types.SUCCESS]: alertVariants.SUCCESS,\r\n  [types.DANGER]: alertVariants.DANGER,\r\n  [types.WARNING]: alertVariants.WARNING,\r\n}\r\n\r\nconst StyledToast = styled.div`\r\n  right: 16px;\r\n  position: fixed;\r\n  max-width: calc(100% - 32px);\r\n  transition: all 250ms ease-in;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 400px;\r\n  }\r\n`\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\r\n  const timer = useRef<number>()\r\n  const ref = useRef(null)\r\n  const removeHandler = useRef(onRemove)\r\n  const { id, title, description, type } = toast\r\n\r\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\r\n\r\n  const handleMouseEnter = () => {\r\n    clearTimeout(timer.current)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n\r\n    return () => {\r\n      clearTimeout(timer.current)\r\n    }\r\n  }, [timer, ttl, handleRemove])\r\n\r\n  return (\r\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\r\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\r\n          {description}\r\n        </Alert>\r\n      </StyledToast>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import React from 'react'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport Toast from './Toast'\r\nimport { ToastContainerProps } from './types'\r\n\r\nconst ZINDEX = 1000\r\nconst TOP_POSITION = 80 // Initial position from the top\r\n\r\nconst StyledToastContainer = styled.div`\r\n  .enter,\r\n  .appear {\r\n    opacity: 0.01;\r\n  }\r\n\r\n  .enter.enter-active,\r\n  .appear.appear-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n\r\n  .exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .exit.exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 250ms ease-out;\r\n  }\r\n`\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\r\n  return (\r\n    <StyledToastContainer>\r\n      <TransitionGroup>\r\n        {toasts.map((toast, index) => {\r\n          const zIndex = (ZINDEX - index).toString()\r\n          const top = TOP_POSITION + index * stackSpacing\r\n\r\n          return (\r\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </StyledToastContainer>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from 'components/Toast'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from 'components/Toast'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_CHAIN_ID : process.env.REACT_APP_MAIN_CHAIN_ID, 10)\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  if (!VISIBILITY_STATE_SUPPORTED) {\r\n    return true\r\n  }\r\n\r\n  return document.visibilityState === 'visible'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible() {\r\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    const handleVisibilityChange = () => {\r\n      setIsVisible(isWindowVisible())\r\n    }\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    }\r\n  }, [setIsVisible])\r\n\r\n  return isVisible\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const timer = useRef(null)\r\n  const dispatch = useAppDispatch()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  useEffect(() => {\r\n    if (isWindowVisible) {\r\n      timer.current = setInterval(async () => {\r\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n        dispatch(setBlock(blockNumber))\r\n      }, 6000)\r\n    } else {\r\n      clearInterval(timer.current)\r\n    }\r\n\r\n    return () => clearInterval(timer.current)\r\n  }, [dispatch, timer, isWindowVisible])\r\n}\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\r\nimport { Nft, NftType } from 'config/constants/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Gets the identifier key based on the nft address\r\n * Helpful for looking up the key when all you have is the address\r\n */\r\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\r\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\r\n    const address = getAddress(nftSourceEntry.address)\r\n    return address === nftAddress\r\n  })\r\n\r\n  return nftSource ? nftSource.identifierKey : null\r\n}\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getAddressByType = (type: NftType) => {\r\n  return getAddress(nftSources[type].address)\r\n}\r\n\r\nexport const fetchCachedUriData = async (tokenUrl: string) => {\r\n  try {\r\n    const localUriData = localStorage.getItem(tokenUrl)\r\n\r\n    if (localUriData) {\r\n      const data = JSON.parse(localUriData)\r\n      return data\r\n    }\r\n\r\n    const uriDataResponse = await fetch(tokenUrl)\r\n\r\n    if (!uriDataResponse.ok) {\r\n      throw new Error('Unable to fetch uriData')\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\r\n    return uriData\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.tokenURI(tokenId)\r\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\r\n\r\n    if (!uriData) {\r\n      return null\r\n    }\r\n\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  if (!identifierKey) {\r\n    return null\r\n  }\r\n\r\n  if (!uriData[identifierKey]) {\r\n    return null\r\n  }\r\n\r\n  return Nfts.find((nft) => {\r\n    return uriData[identifierKey].includes(nft.identifier)\r\n  })\r\n}\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { IPFS_GATEWAY } from './nfts'\r\nimport { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo, Token } from './types'\r\n\r\nconst cakeBnbLpToken: Token = {\r\n  symbol: farms[1].lpSymbol,\r\n  address: farms[1].lpAddresses,\r\n  decimals: 18,\r\n}\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'kalmar',\r\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n    isActive: true,\r\n    name: 'Kalmar (KALM)',\r\n    poolBasic: {\r\n      saleAmount: '375,000 KALM',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '875,000 KALM',\r\n      raiseAmount: '$2,500,000',\r\n      cakeToBurn: '$1,250,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.kalm,\r\n    releaseBlockNumber: 7707736,\r\n    campaignId: '511110000',\r\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n    tokenOfferingPrice: 2.0,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'hotcross',\r\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n    isActive: false,\r\n    name: 'Hot Cross (HOTCROSS)',\r\n    poolBasic: {\r\n      saleAmount: '15,000,000 HOTCROSS',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '35,000,000 HOTCROSS',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hotcross,\r\n    releaseBlockNumber: 7477900,\r\n    campaignId: '511100000',\r\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n    tokenOfferingPrice: 0.05,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'horizon',\r\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n    isActive: false,\r\n    name: 'Horizon Protocol (HZN)',\r\n    poolBasic: {\r\n      saleAmount: '3,000,000 HZN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '7,000,000 HZN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hzn,\r\n    releaseBlockNumber: 6581111,\r\n    campaignId: '511090000',\r\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n    tokenOfferingPrice: 0.25,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: false,\r\n    name: 'Belt (BELT)',\r\n    poolUnlimited: {\r\n      saleAmount: '150,000 BELT',\r\n      raiseAmount: '$3,000,000',\r\n      cakeToBurn: '$1,500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.belt,\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    poolUnlimited: {\r\n      saleAmount: '8,000,000 WATCH',\r\n      raiseAmount: '$800,000',\r\n      cakeToBurn: '$400,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.watch,\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    poolUnlimited: {\r\n      saleAmount: '2,000,000 BRY',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.bry,\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,500,000 wSOTE',\r\n      raiseAmount: '$525,000',\r\n      cakeToBurn: '$262,500',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.wsote,\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    poolUnlimited: {\r\n      saleAmount: '10,000,000 Helmet',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.helmet,\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,000,000 TEN',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ten,\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    poolUnlimited: {\r\n      saleAmount: '700,000 DITTO',\r\n      raiseAmount: '$630,000',\r\n      cakeToBurn: '$315,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ditto,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    poolUnlimited: {\r\n      saleAmount: '100,000,000 BLINK',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.blink,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import Cookies from 'js-cookie'\r\nimport { Profile } from 'state/types'\r\nimport { GetUserProfileResponse } from 'utils/types'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { getTeam } from 'state/teams/helpers'\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: userId.toNumber(),\r\n    points: numberPoints.toNumber(),\r\n    teamId: teamId.toNumber(),\r\n    tokenId: tokenId.toNumber(),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport const getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\n/**\r\n * Intended to be used for getting a profile avatar\r\n */\r\nexport const getProfileAvatar = async (address: string) => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return null\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n\r\n    if (!isActive) {\r\n      return null\r\n    }\r\n\r\n    const nft = await getNftByTokenId(nftAddress, tokenId)\r\n    return nft\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n  profileAvatars: {},\r\n}\r\n\r\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\r\n  'profile/fetchProfileAvatar',\r\n  async (account) => {\r\n    const nft = await getProfileAvatar(account)\r\n    return { account, nft }\r\n  },\r\n)\r\n\r\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\r\n  'profile/fetchProfileUsername',\r\n  async (account) => {\r\n    const username = await getUsername(account)\r\n    return { account, username }\r\n  },\r\n)\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.hasRegistered = hasRegistered\r\n      state.data = profile\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\r\n      const { account, username } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          username,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username, nft: null }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\r\n      const { account, nft } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          nft,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username: null, nft }\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n  getFarmAuctionContract,\r\n  getBunnySpecialLotteryContract,\r\n  getNFTContract\r\n} from 'utils/contractHelpers'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\r\nimport ENS_ABI from '../config/abi/ens-registrar.json'\r\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\r\nimport ERC20_ABI from '../config/abi/erc20.json'\r\nimport WETH_ABI from '../config/abi/weth.json'\r\nimport multiCallAbi from '../config/abi/Multicall.json'\r\nimport { getContract } from '../utils'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\nexport const useNftContract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getNFTContract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialLotteryContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useFarmAuctionContract = () => {\r\n  const { account, library } = useActiveWeb3React()\r\n  // This hook is slightly different from others\r\n  // Calls were failing if unconnected user goes to farm auction page\r\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\r\n  // However, this fix is not ideal, it currently has following behavior:\r\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\r\n  // - If you go directly to Farm Auction page\r\n  //   - as unconnected user you don't see any console errors\r\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\r\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\r\n  //\r\n  // Similar behavior was also noticed on Trading Competition page.\r\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\r\n}\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  return useContract(getMulticallAddress(), multiCallAbi, false)\r\n}\r\n","export default {\r\n  masterChef: {\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  sousChef: {\r\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  lotteryV2: {\r\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\r\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  tradingCompetition: {\r\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  easterNft: {\r\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  cakeVault: {\r\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  predictions: {\r\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  bunnySpecialPrediction: {\r\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  bunnySpecialLottery: {\r\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\r\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  farmAuction: {\r\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\r\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\r\n    1: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    4: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  },\r\n  nftTendie: {\r\n    4: '0xD93BC2970Af389B9D32EC3B9f23E27B9a324373d',\r\n    1: '0x06c6DB12875E254a0e0C7259C7d4993E017EDC80',\r\n    56: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9'\r\n  }\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_CHAIN_ID : process.env.REACT_APP_MAIN_CHAIN_ID\r\n  // global.console.log(\"GetAddress\", chainId, ChainId.MAINNET,address, address[chainId])\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getNftContract = () => {\r\n  return getAddress(addresses.nftTendie)\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\nexport const getBunnySpecialLotteryAddress = () => {\r\n  return getAddress(addresses.bunnySpecialLottery)\r\n}\r\nexport const getFarmAuctionAddress = () => {\r\n  return getAddress(addresses.farmAuction)\r\n}\r\n","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n  getBunnySpecialLotteryAddress,\r\n  getFarmAuctionAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport nftAbi from 'config/abi/nftTendie.json'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\r\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\r\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getNFTContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(nftAbi, address, signer)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, getCakeAddress(), signer)\r\n}\r\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\r\n}\r\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\r\nimport { AppState } from '../index'\r\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\r\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\r\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n  // need reverse order to make sure mapping includes top priority last\r\n  if (first < second) return 1\r\n  if (first > second) return -1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<\r\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\r\n>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.TESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: {\r\n            token,\r\n            list,\r\n          },\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useAllLists(): {\r\n  readonly [url: string]: {\r\n    readonly current: TokenList | null\r\n    readonly pendingUpdate: TokenList | null\r\n    readonly loadingRequestId: string | null\r\n    readonly error: string | null\r\n  }\r\n} {\r\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n  return {\r\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\r\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\r\n  }\r\n}\r\n\r\n// merge tokens contained within lists from urls\r\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\r\n  const lists = useAllLists()\r\n\r\n  return useMemo(() => {\r\n    if (!urls) return EMPTY_LIST\r\n\r\n    return (\r\n      urls\r\n        .slice()\r\n        // sort by priority so top priority goes last\r\n        .sort(sortByListPriority)\r\n        .reduce((allTokens, currentUrl) => {\r\n          const current = lists[currentUrl]?.current\r\n          if (!current) return allTokens\r\n          try {\r\n            const newTokens = Object.assign(listToTokenMap(current))\r\n            return combineMaps(allTokens, newTokens)\r\n          } catch (error) {\r\n            console.error('Could not show token list due to error', error)\r\n            return allTokens\r\n          }\r\n        }, EMPTY_LIST)\r\n    )\r\n  }, [lists, urls])\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\r\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\r\n  )\r\n}\r\n\r\nexport function useInactiveListUrls(): string[] {\r\n  const lists = useAllLists()\r\n  const allActiveListUrls = useActiveListUrls()\r\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n  const activeListUrls = useActiveListUrls()\r\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\r\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n  return combineMaps(activeTokens, defaultTokenMap)\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n  const allInactiveListUrls: string[] = useInactiveListUrls()\r\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\r\n}\r\n\r\n// used to hide warnings on import for default tokens\r\nexport function useDefaultTokenList(): TokenAddressMap {\r\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n  // get hard coded unsupported tokens\r\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n\r\n  // get any loaded unsupported tokens\r\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\r\n\r\n  // format into one token address map\r\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n  const activeListUrls = useActiveListUrls()\r\n  return Boolean(activeListUrls?.includes(url))\r\n}\r\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  FarmStakedOnly,\r\n  muteAudio,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  toggleTheme as toggleThemeAction,\r\n  unmuteAudio,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  updateGasPrice,\r\n  addWatchlistToken,\r\n  addWatchlistPool,\r\n} from '../actions'\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useThemeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    dispatch(toggleThemeAction())\r\n  }, [dispatch])\r\n\r\n  return [isDark, toggleTheme]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\r\n    return state.user.userFarmStakedOnly\r\n  })\r\n\r\n  const setUserFarmStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\r\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [\r\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n    setUserFarmStakedOnly,\r\n  ]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useGasPrice(): string {\r\n  const chainId = process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_CHAIN_ID : process.env.REACT_APP_MAIN_CHAIN_ID\r\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userGasPrice = useGasPrice()\r\n\r\n  const setGasPrice = useCallback(\r\n    (gasPrice: string) => {\r\n      dispatch(updateGasPrice({ gasPrice }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userGasPrice, setGasPrice]\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n\r\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\r\n  const updatedSavedTokens = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistToken({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedTokens, updatedSavedTokens]\r\n}\r\n\r\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\r\n  const updateSavedPools = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistPool({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedPools, updateSavedPools]\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Chunky Chickens',\r\n  description:\r\n    'Chunky Chickens',\r\n  image: '',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Chunky Chickens')}`,\r\n      }\r\n    case '/info':\r\n      return {\r\n        title: `${t('Overview')} | ${t('Chunky Chickens Info & Analytics')}`,\r\n        description: 'View statistics for Chunky Chickens exchanges.',\r\n      }\r\n    case '/info/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Chunky Chickens Info & Analytics')}`,\r\n        description: 'View statistics for Chunky Chickens exchanges.',\r\n      }\r\n    case '/info/tokens':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Chunky Chickens Info & Analytics')}`,\r\n        description: 'View statistics for Chunky Chickens exchanges.',\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { BUSD, CAKE, WBNB } from '../config/constants/tokens'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst BUSD_MAINNET = BUSD[ChainId.MAINNET]\r\n\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\r\n    () => [\r\n      [\r\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\r\n        chainId ? WETH[chainId] : undefined,\r\n      ],\r\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ],\r\n    [chainId, currency, wrapped],\r\n  )\r\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\r\n\r\n  return useMemo(() => {\r\n    if (!currency || !wrapped || !chainId) {\r\n      return undefined\r\n    }\r\n    // handle weth/eth\r\n    if (wrapped.equals(WETH[chainId])) {\r\n      if (busdPair) {\r\n        const price = busdPair.priceOf(WETH[chainId])\r\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n      }\r\n      return undefined\r\n    }\r\n    // handle busd\r\n    if (wrapped.equals(BUSD_MAINNET)) {\r\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\r\n    }\r\n\r\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\r\n    const ethPairETHBUSDValue: JSBI =\r\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\r\n\r\n    // all other tokens\r\n    // first try the busd pair\r\n    if (\r\n      busdPairState === PairState.EXISTS &&\r\n      busdPair &&\r\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\r\n    ) {\r\n      const price = busdPair.priceOf(wrapped)\r\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n    }\r\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\r\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\r\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\r\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\r\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\r\n}\r\n\r\nexport const useCakeBusdPrice = (): Price | undefined => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const currentChaindId = chainId || ChainId.MAINNET\r\n  const cakeBusdPrice = useBUSDPrice(CAKE[currentChaindId])\r\n  return cakeBusdPrice\r\n}\r\n\r\nexport const useBNBBusdPrice = (): Price | undefined => {\r\n  const bnbBusdPrice = useBUSDPrice(WBNB)\r\n  return bnbBusdPrice\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = useCakeBusdPrice()\r\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n  if (symbol) {\r\n    pageTitle = [symbol, title].join(' - ')\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  symbol?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta symbol={symbol} />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_CHAIN_ID : process.env.REACT_APP_MAIN_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_APP_ENV === 'test' ? process.env.REACT_APP_TEST_CHAIN_ID : process.env.REACT_APP_MAIN_CHAIN_ID, 10)\r\n    // global.console.log(\"ChainId\", chainId, `0x${chainId.toString(16)}`)\r\n    try {\r\n      // wallet_switchEthereumChain\r\n      await provider.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: `0x${chainId.toString(16)}` }],\r\n      });\r\n      return true\r\n    } catch ( switchError) {\r\n      // global.console.log(\"SwitchError\", switchError)\r\n      try {\r\n        await provider.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: `0x${chainId.toString(16)}`,\r\n              chainName: 'Ethereum Mainnet',\r\n              nativeCurrency: {\r\n                name: 'ETH',\r\n                symbol: 'eth',\r\n                decimals: 18,\r\n              },\r\n              rpcUrls: nodes,\r\n              blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n            },\r\n          ],\r\n        })\r\n        return true;\r\n      } catch (addError) {\r\n        // handle \"add\" error\r\n        console.error('Failed to setup the network in Metamask:', addError)\r\n        return false\r\n      }\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the ETH network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      \r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            // console.log(\"N00\", connector)\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(connectorLocalStorageKey)\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { SerializedBigNumber } from 'state/types'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport enum FarmStakedOnly {\r\n  ON_FINISHED = 'onFinished',\r\n  TRUE = 'true',\r\n  FALSE = 'false',\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair =\r\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\nexport const toggleTheme = createAction<void>('user/toggleTheme')\r\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\r\n  'user/updateUserFarmStakedOnly',\r\n)\r\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\r\n\r\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\r\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  try {\r\n    const multi = getMulticallContract()\r\n    const itf = new ethers.utils.Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.aggregate(calldata)\r\n\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  currentBlock: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\r\n\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !currentBlock) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              )\r\n\r\n              const toast = receipt.status === 1 ? toastSuccess : toastError\r\n              toast(\r\n                'Transaction receipt',\r\n                <Flex flexDirection=\"column\">\r\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n                  {chainId && (\r\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\r\n                      View on BscScan\r\n                    </Link>\r\n                  )}\r\n                </Flex>,\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\r\n\r\n  return null\r\n}\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    // global.console.log(\"ConnectorID\", connectorId)\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n      // global.console.log(\"ConnectorID2\", connectorId)\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Rubik', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from '../Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import './App.css';\r\nimport React, { lazy } from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\n// import { usePollBlockNumber } from 'state/block/hooks'\r\n// import { usePollCoreFarmData } from 'state/farms/hooks'\r\n// import { useFetchProfile } from 'state/profile/hooks'\r\n// import { DatePickerPortal } from 'components/DatePicker'\r\nimport GlobalStyle from './style/Global'\r\n// import Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/Loader/PageLoader'\r\n// import EasterEgg from './components/EasterEgg'\r\nimport history from './routerHistory'\r\n// import GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  // usePollBlockNumber()\r\n  useEagerConnect()\r\n  // useFetchProfile()\r\n  // usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      {/* <GlobalCheckClaimStatus excludeLocations={['/collectibles']} /> */}\r\n      {/* <Menu> */}\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      {/* </Menu> */}\r\n      {/* <EasterEgg iterations={2} /> */}\r\n      <ToastListener />\r\n      {/* <DatePickerPortal /> */}\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  const [isDark] = useThemeManager()\r\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeProviderWrapper>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeProviderWrapper>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React, { useMemo, ReactNode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\r\nimport { BLOCKED_ADDRESSES } from './config/constants'\r\n// import ListsUpdater from './state/lists/updater'\r\n// import MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      {/* <ListsUpdater /> */}\r\n      <TransactionUpdater />\r\n      {/* <MulticallUpdater /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Blocklist({ children }: { children: ReactNode }) {\r\n  const { account } = useActiveWeb3React()\r\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\r\n  if (blocked) {\r\n    return <div>Blocked address</div>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Blocklist> */}\r\n      <Providers>\r\n        <Updaters />\r\n        <App />\r\n      </Providers>\r\n    {/* </Blocklist> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import BigNumber from 'bignumber.js'\r\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56?: string\r\n  1?: string\r\n  4?: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type NftSource = {\r\n  [key in NftType]: {\r\n    address: Address\r\n    identifierKey: string\r\n  }\r\n}\r\n\r\nexport enum NftType {\r\n  PANCAKE = 'pancake',\r\n  MIXIE = 'mixie',\r\n}\r\n\r\nexport type Nft = {\r\n  description: string\r\n  name: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  type: NftType\r\n  video?: NftVideo\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  // Used to be \"bunnyId\". Used when minting NFT\r\n  variationId?: number | string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n\r\n// Farm Auction\r\nexport interface FarmAuctionBidderConfig {\r\n  account: string\r\n  farmName: string\r\n  tokenAddress: string\r\n  quoteToken: Token\r\n  tokenName: string\r\n  projectSite?: string\r\n  lpAddress?: string\r\n}\r\n\r\n// Note: this status is slightly different compared to 'status' comfing\r\n// from Farm Auction smart contract\r\nexport enum AuctionStatus {\r\n  ToBeAnnounced, // No specific dates/blocks to display\r\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\r\n  Open, // Auction is open for bids\r\n  Finished, // Auction end block is reached, bidding is not possible\r\n  Closed, // Auction was closed in smart contract\r\n}\r\n\r\nexport interface Auction {\r\n  id: number\r\n  status: AuctionStatus\r\n  startBlock: number\r\n  startDate: Date\r\n  endBlock: number\r\n  endDate: Date\r\n  auctionDuration: number\r\n  farmStartBlock: number\r\n  farmStartDate: Date\r\n  farmEndBlock: number\r\n  farmEndDate: Date\r\n  initialBidAmount: number\r\n  topLeaderboard: number\r\n  leaderboardThreshold: BigNumber\r\n}\r\n\r\nexport interface BidderAuction {\r\n  id: number\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface Bidder extends FarmAuctionBidderConfig {\r\n  position?: number\r\n  isTopPosition: boolean\r\n  samePositionAsAbove: boolean\r\n  amount: BigNumber\r\n}\r\n\r\nexport interface ConnectedBidder {\r\n  account: string\r\n  isWhitelisted: boolean\r\n  bidderData?: Bidder\r\n}\r\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  PANCAKE_TOP100,\r\n  PANCAKE_EXTENDED,\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 217,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.217',\r\n  },\r\n  {\r\n    sousId: 216,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cvp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.14',\r\n  },\r\n  {\r\n    sousId: 215,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.qbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.412',\r\n  },\r\n  {\r\n    sousId: 214,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.naos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1736',\r\n  },\r\n  {\r\n    sousId: 213,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pha,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.28',\r\n  },\r\n  {\r\n    sousId: 212,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.101',\r\n  },\r\n  {\r\n    sousId: 211,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.9837',\r\n  },\r\n  {\r\n    sousId: 210,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pots,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 209,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 208,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.revv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.331',\r\n  },\r\n  {\r\n    sousId: 207,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '263',\r\n  },\r\n  {\r\n    sousId: 206,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.skill,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00289',\r\n  },\r\n  {\r\n    sousId: 205,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1815.39',\r\n  },\r\n  {\r\n    sousId: 204,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.if,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02835',\r\n  },\r\n  {\r\n    sousId: 203,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.sps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '12.86',\r\n  },\r\n  {\r\n    sousId: 202,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.c98,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 201,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.axs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00744',\r\n  },\r\n  {\r\n    sousId: 200,\r\n    stakingToken: tokens.axs,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00992',\r\n  },\r\n  {\r\n    sousId: 199,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02696',\r\n  },\r\n  {\r\n    sousId: 198,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '9.6643',\r\n  },\r\n  {\r\n    sousId: 197,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4286',\r\n  },\r\n  {\r\n    sousId: 196,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.titan,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 195,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.harmony,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.0092',\r\n  },\r\n  {\r\n    sousId: 194,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mask,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.06423',\r\n  },\r\n  {\r\n    sousId: 193,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dvi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7233',\r\n  },\r\n  {\r\n    sousId: 192,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.67129',\r\n  },\r\n  {\r\n    sousId: 191,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.adx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7523',\r\n  },\r\n  {\r\n    sousId: 190,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '69.9074',\r\n  },\r\n  {\r\n    sousId: 189,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bscpad,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3877',\r\n  },\r\n  {\r\n    sousId: 188,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.rabbit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.993',\r\n  },\r\n  {\r\n    sousId: 187,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.waultx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '7.9108',\r\n  },\r\n  {\r\n    sousId: 186,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.wex,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '11.574',\r\n  },\r\n  {\r\n    sousId: 185,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.form,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.4467',\r\n  },\r\n  {\r\n    sousId: 184,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.orbs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.8946',\r\n  },\r\n  {\r\n    sousId: 183,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.$dg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00135',\r\n  },\r\n  {\r\n    sousId: 182,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3854',\r\n  },\r\n  {\r\n    sousId: 181,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0003854',\r\n  },\r\n  {\r\n    sousId: 180,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.htb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '5.2083',\r\n  },\r\n  {\r\n    sousId: 179,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1001',\r\n  },\r\n  {\r\n    sousId: 178,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 177,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.3078',\r\n  },\r\n  {\r\n    sousId: 176,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.o3,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.107638',\r\n  },\r\n  {\r\n    sousId: 175,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ampl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.398',\r\n  },\r\n  {\r\n    sousId: 174,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  {\r\n    sousId: 173,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6741',\r\n  },\r\n  {\r\n    sousId: 172,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.marsh,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1108',\r\n  },\r\n  {\r\n    sousId: 171,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mbox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4803',\r\n  },\r\n  {\r\n    sousId: 170,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ata,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 169,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.27777',\r\n  },\r\n  {\r\n    sousId: 168,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bcfx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 167,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.qkc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.9143',\r\n  },\r\n  {\r\n    sousId: 166,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ktn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01215',\r\n  },\r\n  {\r\n    sousId: 165,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mtrg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.05613',\r\n  },\r\n  {\r\n    sousId: 164,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 163,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.vrt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '40.5092',\r\n  },\r\n  {\r\n    sousId: 162,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 161,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ez,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01736',\r\n  },\r\n  {\r\n    sousId: 160,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenPerBlock: '0.00868',\r\n  },\r\n  {\r\n    sousId: 159,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.popen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.19097',\r\n  },\r\n  {\r\n    sousId: 158,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.023148',\r\n  },\r\n  {\r\n    sousId: 157,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.well,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2025',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 156,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.deri,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.6087',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 155,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.chr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.655',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 154,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cyc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00015914',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 153,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xend,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.31828',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 152,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.03553',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 151,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hotcross,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 150,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.rfox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 149,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.wmass,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.24942',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 148,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ubxt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.4074',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 147,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 146,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τdoge,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.868',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 145,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01261',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 144,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.one,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '57.87',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 143,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.fine,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1342',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 142,\r\n    stakingToken: tokens.doge,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01388',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 141,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01331',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 140,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oin,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 139,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hyfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 138,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kun,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23148',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 137,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.math,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15798',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 136,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.17361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 135,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '462.96',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 134,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '4.0509',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 133,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '79.86',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 132,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lmt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.66145',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 131,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pnt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09548',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 130,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0298',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 129,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4861',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 128,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 127,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 126,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 125,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 124,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 123,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 122,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 121,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 120,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 119,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 118,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 117,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.009837',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 116,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dfd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.46296',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 115,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alpaca,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.22743',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 114,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 113,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 112,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.21527',\r\n  },\r\n  {\r\n    sousId: 111,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 110,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 109,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 108,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mix,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3721',\r\n  },\r\n  {\r\n    sousId: 107,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.3356',\r\n  },\r\n  {\r\n    sousId: 106,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '14.4675',\r\n  },\r\n  {\r\n    sousId: 105,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hzn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 104,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23495',\r\n  },\r\n  {\r\n    sousId: 103,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 102,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tlm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '17.361',\r\n  },\r\n  {\r\n    sousId: 101,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08796',\r\n  },\r\n  {\r\n    sousId: 100,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.eps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.07716',\r\n  },\r\n  {\r\n    sousId: 99,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 98,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.itam,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.096',\r\n  },\r\n  {\r\n    sousId: 97,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 96,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tko,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n  },\r\n  {\r\n    sousId: 95,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.apys,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09953',\r\n  },\r\n  {\r\n    sousId: 94,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hoo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.489',\r\n  },\r\n  {\r\n    sousId: 93,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 92,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.easy,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0072338',\r\n  },\r\n  {\r\n    sousId: 91,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nrv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15046',\r\n  },\r\n  {\r\n    sousId: 90,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dego,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00405',\r\n  },\r\n  {\r\n    sousId: 89,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 88,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 87,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6811',\r\n  },\r\n  {\r\n    sousId: 86,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 85,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 84,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.zil,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.0995',\r\n  },\r\n  {\r\n    sousId: 83,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pcws,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00434',\r\n  },\r\n  {\r\n    sousId: 82,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 81,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 80,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2893',\r\n  },\r\n  {\r\n    sousId: 79,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 78,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 77,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.trade,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4484',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 76,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dusk,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 75,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00007234',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 74,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.txl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.434027',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 73,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5.787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 72,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bunny,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00289',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 71,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alice,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.14467',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 70,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.for,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2.8935',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 69,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bux,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 68,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nuls,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0868',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 67,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.belt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00868',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 66,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4861',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 65,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0001157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 64,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.009837',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 63,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0549',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 62,\r\n    stakingToken: tokens.tpt,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0462',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 61,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tpt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3.616',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 60,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.watch,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.3472',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 59,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0413',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 58,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 57,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.iotx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '6.365',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 56,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bor,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000395',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 55,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bopen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0723',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 54,\r\n    stakingToken: tokens.sushi,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0367',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 53,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dodo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0578',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 52,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.13',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 51,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bry,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 50,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.zee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1736',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 49,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swgb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.899',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 48,\r\n    stakingToken: tokens.comp,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.055',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 47,\r\n    stakingToken: tokens.comp,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.55',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 46,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.sfp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 45,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 44,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 43,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.231',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 42,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0138',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 41,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.075',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 40,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.egld,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001215',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 39,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 38,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.wsote,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.23',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 37,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.front,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2546',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 36,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.helmet,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.81',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 35,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btcst,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.011574',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 34,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bscx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.17361',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 33,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ten,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.05787',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 32,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.balbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4166',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 31,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.asr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 30,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.atm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 29,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.og,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 28,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.reef,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '115.74',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 27,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ditto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 26,\r\n    stakingToken: tokens.twt,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 24,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.juv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 25,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.psg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 21,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.vai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.104',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    stakingToken: tokens.bnb,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n    },\r\n    poolCategory: PoolCategory.BINANCE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 19,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0041',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 18,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 17,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 16,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.unfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02893',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 15,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.twt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 14,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hard,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.346',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 13,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '12.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 12,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.stax,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 11,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nar,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '1',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nya,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '10',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ctk,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.twt,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '20',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.inj,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\r\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\r\n\r\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [CAKE[ChainId.MAINNET], WBNB],\r\n    [BUSD[ChainId.MAINNET], USDT],\r\n    [DAI, USDT],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        let data\r\n        if (result?.data && result?.data !== '0x') {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          data = result.data\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\r\n  }, [fragment, contract, results, currentBlock])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\r\n  }, [fragment, results, contractInterface, currentBlock])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, currentBlock)\r\n  }, [result, contract, fragment, currentBlock])\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: 'https://etherscan.io',\r\n  [ChainId.TESTNET]: 'https://rinkeby.etherscan.io',\r\n}\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 9 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\r\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const AUCTION_BIDDERS_TO_FETCH = 500\r\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\r\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\r\n","import { Nft, NftSource, NftType } from './types'\r\n\r\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\r\n\r\nexport const nftSources: NftSource = {\r\n  [NftType.PANCAKE]: {\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n  [NftType.MIXIE]: {\r\n    address: {\r\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\r\n      97: '',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n}\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Baller',\r\n    description: 'Absolute (lottery) baller.',\r\n    images: {\r\n      lg: 'baller-lg.png',\r\n      md: 'baller-md.png',\r\n      sm: 'baller-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'baller',\r\n    type: NftType.PANCAKE,\r\n    variationId: 20,\r\n  },\r\n  {\r\n    name: 'Lucky',\r\n    description: \"Lucky's got the golden ticket!\",\r\n    images: {\r\n      lg: 'lucky-lg.png',\r\n      md: 'lucky-md.png',\r\n      sm: 'lucky-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'lucky',\r\n    type: NftType.PANCAKE,\r\n    variationId: 19,\r\n  },\r\n  {\r\n    name: 'Lottie',\r\n    description: \"Lottie's looking hotto for lotto!\",\r\n    images: {\r\n      lg: 'lottie-lg.png',\r\n      md: 'lottie-md.png',\r\n      sm: 'lottie-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'lottie',\r\n    type: NftType.PANCAKE,\r\n    variationId: 18,\r\n  },\r\n  {\r\n    name: 'Claire',\r\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\r\n    images: {\r\n      lg: 'claire-lg.png',\r\n      md: 'claire-md.png',\r\n      sm: 'claire-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'claire',\r\n    type: NftType.PANCAKE,\r\n    variationId: 17,\r\n  },\r\n  {\r\n    name: 'Syrup Soak',\r\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\r\n    images: {\r\n      lg: 'soak-lg.png',\r\n      md: 'soak-md.png',\r\n      sm: 'soak-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'syrup-soak',\r\n    type: NftType.PANCAKE,\r\n    variationId: 16,\r\n  },\r\n  {\r\n    name: 'Mixie v1',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-1-lg.png',\r\n      md: 'mixie-1-md.png',\r\n      sm: 'mixie-1-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '001-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Mixie v2',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-2-lg.png',\r\n      md: 'mixie-2-md.png',\r\n      sm: 'mixie-2-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '002-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Mixie v3',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-3-lg.png',\r\n      md: 'mixie-3-md.png',\r\n      sm: 'mixie-3-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '003-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-champion-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-caker',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-flipper',\r\n    type: NftType.PANCAKE,\r\n    variationId: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'bullish',\r\n    type: NftType.PANCAKE,\r\n    variationId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'hiccup',\r\n    type: NftType.PANCAKE,\r\n    variationId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sleepy',\r\n    type: NftType.PANCAKE,\r\n    variationId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sunny',\r\n    type: NftType.PANCAKE,\r\n    variationId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'churro',\r\n    type: NftType.PANCAKE,\r\n    variationId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'dollop',\r\n    type: NftType.PANCAKE,\r\n    variationId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'twinkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'swapsies',\r\n    type: NftType.PANCAKE,\r\n    variationId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'drizzle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'blueberries',\r\n    type: NftType.PANCAKE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'circular',\r\n    type: NftType.PANCAKE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sparkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { SerializedToken } from '../actions'\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n  )\r\n}\r\n\r\nexport enum GAS_PRICE {\r\n  default = '5',\r\n  fast = '6',\r\n  instant = '7',\r\n  testnet = '10',\r\n}\r\n\r\nexport const GAS_PRICE_GWEI = {\r\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\r\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\r\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\r\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\r\n}\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    token: tokens.syrup,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 251,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 252,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n      1: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n      4: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16'\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n   */\r\n  {\r\n    pid: 449,\r\n    lpSymbol: 'BP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\r\n    },\r\n    token: tokens.bp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 454,\r\n    lpSymbol: 'BSCDEFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\r\n    },\r\n    token: tokens.bscdefi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 453,\r\n    lpSymbol: 'QBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\r\n    },\r\n    token: tokens.qbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 452,\r\n    lpSymbol: 'NAOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\r\n    },\r\n    token: tokens.naos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 451,\r\n    lpSymbol: 'PHA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\r\n    },\r\n    token: tokens.pha,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 314,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 446,\r\n    lpSymbol: 'BMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\r\n    },\r\n    token: tokens.bmon,\r\n    quoteToken: tokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 447,\r\n    lpSymbol: 'GNT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\r\n    },\r\n    token: tokens.gnt,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 450,\r\n    lpSymbol: 'SFUND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\r\n    },\r\n    token: tokens.sfund,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 448,\r\n    lpSymbol: 'RUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\r\n    },\r\n    token: tokens.rusd,\r\n    quoteToken: tokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 317,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 445,\r\n    lpSymbol: 'POTS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\r\n    },\r\n    token: tokens.pots,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 397,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n    },\r\n    token: tokens.tusd,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 443,\r\n    lpSymbol: 'BTT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\r\n    },\r\n    token: tokens.btt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 442,\r\n    lpSymbol: 'TRX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\r\n    },\r\n    token: tokens.trx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 441,\r\n    lpSymbol: 'WIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\r\n    },\r\n    token: tokens.win,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 436,\r\n    lpSymbol: 'BABYCAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\r\n    },\r\n    token: tokens.babycake,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 437,\r\n    lpSymbol: 'BMON-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\r\n    },\r\n    token: tokens.bmon,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 440,\r\n    lpSymbol: 'HERO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\r\n    },\r\n    token: tokens.hero,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 438,\r\n    lpSymbol: 'WSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\r\n    },\r\n    token: tokens.wsg,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 439,\r\n    lpSymbol: 'MCRN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\r\n    },\r\n    token: tokens.mcrn,\r\n    quoteToken: tokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 435,\r\n    lpSymbol: 'REVV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\r\n    },\r\n    token: tokens.revv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 367,\r\n    lpSymbol: 'BTT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\r\n    },\r\n    token: tokens.btt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 434,\r\n    lpSymbol: 'SKILL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\r\n    },\r\n    token: tokens.skill,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 369,\r\n    lpSymbol: 'WIN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\r\n    },\r\n    token: tokens.win,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 433,\r\n    lpSymbol: 'IF-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\r\n    },\r\n    token: tokens.if,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 432,\r\n    lpSymbol: 'SPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\r\n    },\r\n    token: tokens.sps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 431,\r\n    lpSymbol: 'C98-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\r\n    },\r\n    token: tokens.c98,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 430,\r\n    lpSymbol: 'AXS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\r\n    },\r\n    token: tokens.axs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 379,\r\n    lpSymbol: 'PMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\r\n    },\r\n    token: tokens.pmon,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 368,\r\n    lpSymbol: 'TRX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\r\n    },\r\n    token: tokens.trx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 429,\r\n    lpSymbol: 'CHESS-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\r\n    },\r\n    token: tokens.chess,\r\n    quoteToken: tokens.usdc,\r\n  },\r\n  {\r\n    pid: 428,\r\n    lpSymbol: 'TITAN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\r\n    },\r\n    token: tokens.titan,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 427,\r\n    lpSymbol: 'ONE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\r\n    },\r\n    token: tokens.harmony,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 426,\r\n    lpSymbol: 'MASK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\r\n    },\r\n    token: tokens.mask,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 425,\r\n    lpSymbol: 'DVI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\r\n    },\r\n    token: tokens.dvi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 339,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 424,\r\n    lpSymbol: 'ADX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\r\n    },\r\n    token: tokens.adx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 423,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.usdt,\r\n  },\r\n  {\r\n    pid: 422,\r\n    lpSymbol: 'CAKE-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.usdt,\r\n  },\r\n  {\r\n    pid: 357,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 421,\r\n    lpSymbol: 'BSCPAD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\r\n    },\r\n    token: tokens.bscpad,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 420,\r\n    lpSymbol: 'RABBIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\r\n    },\r\n    token: tokens.rabbit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 419,\r\n    lpSymbol: 'WAULTx-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\r\n    },\r\n    token: tokens.waultx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 418,\r\n    lpSymbol: 'WEX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\r\n    },\r\n    token: tokens.wex,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 417,\r\n    lpSymbol: 'FORM-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\r\n    },\r\n    token: tokens.form,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 416,\r\n    lpSymbol: 'ORBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\r\n    },\r\n    token: tokens.orbs,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 415,\r\n    lpSymbol: 'DG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\r\n    },\r\n    token: tokens.$dg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 414,\r\n    lpSymbol: 'WOO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\r\n    },\r\n    token: tokens.woo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 413,\r\n    lpSymbol: 'HTB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\r\n    },\r\n    token: tokens.htb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 351,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 337,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 412,\r\n    lpSymbol: 'HAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\r\n    },\r\n    token: tokens.hai,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 411,\r\n    lpSymbol: 'O3-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\r\n    },\r\n    token: tokens.o3,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 410,\r\n    lpSymbol: 'AMPL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\r\n    },\r\n    token: tokens.ampl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 343,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 409,\r\n    lpSymbol: 'ETH-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.usdc,\r\n  },\r\n  {\r\n    pid: 408,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 347,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 407,\r\n    lpSymbol: 'MARSH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\r\n    },\r\n    token: tokens.marsh,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 406,\r\n    lpSymbol: 'BORING-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\r\n    },\r\n    token: tokens.boring,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 405,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    token: tokens.mbox,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 404,\r\n    lpSymbol: 'ATA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\r\n    },\r\n    token: tokens.ata,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 403,\r\n    lpSymbol: 'MX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\r\n    },\r\n    token: tokens.mx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 402,\r\n    lpSymbol: 'bCFX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\r\n    },\r\n    token: tokens.bcfx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 401,\r\n    lpSymbol: 'QKC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\r\n    },\r\n    token: tokens.qkc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 400,\r\n    lpSymbol: 'KTN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\r\n    },\r\n    token: tokens.ktn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 399,\r\n    lpSymbol: 'MTRG-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\r\n    },\r\n    token: tokens.mtrg,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 398,\r\n    lpSymbol: 'SWG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\r\n    },\r\n    token: tokens.swg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 396,\r\n    lpSymbol: 'VRT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\r\n    },\r\n    token: tokens.vrt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 395,\r\n    lpSymbol: 'EZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\r\n    },\r\n    token: tokens.ez,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 394,\r\n    lpSymbol: 'KALM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\r\n    },\r\n    token: tokens.kalm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 393,\r\n    lpSymbol: 'pOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\r\n    },\r\n    token: tokens.popen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 335,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 392,\r\n    lpSymbol: 'WELL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\r\n    },\r\n    token: tokens.well,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 391,\r\n    lpSymbol: 'DERI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\r\n    },\r\n    token: tokens.deri,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 390,\r\n    lpSymbol: 'CHR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\r\n    },\r\n    token: tokens.chr,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 389,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 388,\r\n    lpSymbol: 'CYC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\r\n    },\r\n    token: tokens.cyc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 387,\r\n    lpSymbol: 'XEND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\r\n    },\r\n    token: tokens.xend,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 296,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 386,\r\n    lpSymbol: 'HOTCROSS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\r\n    },\r\n    token: tokens.hotcross,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 385,\r\n    lpSymbol: 'RFOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\r\n    },\r\n    token: tokens.rfox,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 384,\r\n    lpSymbol: 'WMASS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\r\n    },\r\n    token: tokens.wmass,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 383,\r\n    lpSymbol: 'UBXT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\r\n    },\r\n    token: tokens.ubxt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 381,\r\n    lpSymbol: 'BTR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\r\n    },\r\n    token: tokens.btr,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 380,\r\n    lpSymbol: 'τDOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\r\n    },\r\n    token: tokens.τdoge,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 378,\r\n    lpSymbol: 'ONE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\r\n    },\r\n    token: tokens.one,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 377,\r\n    lpSymbol: 'FINE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\r\n    },\r\n    token: tokens.fine,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 376,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\r\n    },\r\n    token: tokens.doge,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 310,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 375,\r\n    lpSymbol: 'OIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\r\n    },\r\n    token: tokens.oin,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 374,\r\n    lpSymbol: 'HYFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\r\n    },\r\n    token: tokens.hyfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 373,\r\n    lpSymbol: 'KUN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\r\n    },\r\n    token: tokens.kun,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 372,\r\n    lpSymbol: 'KUN-QSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\r\n    },\r\n    token: tokens.kun,\r\n    quoteToken: tokens.qsd,\r\n  },\r\n  {\r\n    pid: 371,\r\n    lpSymbol: 'MATH-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\r\n    },\r\n    token: tokens.math,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 370,\r\n    lpSymbol: 'mCOIN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\r\n    },\r\n    token: tokens.mcoin,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 366,\r\n    lpSymbol: 'PNT-pBTC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\r\n    },\r\n    token: tokens.pnt,\r\n    quoteToken: tokens.pbtc,\r\n  },\r\n  {\r\n    pid: 311,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 365,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 364,\r\n    lpSymbol: 'LMT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\r\n    },\r\n    token: tokens.lmt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 363,\r\n    lpSymbol: 'DFD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\r\n    },\r\n    token: tokens.dfd,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 362,\r\n    lpSymbol: 'ALPACA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\r\n    },\r\n    token: tokens.alpaca,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 361,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 304,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 360,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 359,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 358,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 356,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 355,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 354,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 353,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 352,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 350,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 349,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 348,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 346,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 345,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 344,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 342,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 341,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 340,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 338,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 336,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 334,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 333,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 332,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 331,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 330,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 329,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 328,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 327,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 326,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 325,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 324,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 323,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 322,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 321,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 320,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 319,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 318,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 316,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 315,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 313,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 312,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 309,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 308,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 307,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 306,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 305,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 303,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 302,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 301,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 300,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 299,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 298,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 297,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 295,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 294,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 293,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 292,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 291,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 290,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 289,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 288,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 287,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 286,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 285,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 284,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 283,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 282,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 281,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 280,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 279,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 278,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 277,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 276,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 275,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 274,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 273,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 272,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 271,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 270,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 269,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 268,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 267,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 266,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 265,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 264,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 263,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 262,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 261,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 260,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 259,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 258,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 257,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 256,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 255,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 254,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 253,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * V2 farms, set to be removed once unstaked\r\n   */\r\n  {\r\n    pid: 139,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 250,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 193,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 249,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 248,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 247,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 246,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 245,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 244,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 243,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 242,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 241,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 240,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 239,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 238,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 237,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 236,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 235,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 234,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 233,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 232,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 231,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 230,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 229,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 228,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 227,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 226,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 225,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 224,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 223,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 222,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 221,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 220,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 219,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 218,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 217,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 216,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 215,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 214,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 213,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 212,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 211,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 210,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 209,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 208,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 207,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 206,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 205,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 204,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 203,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 202,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 201,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 200,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 199,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 198,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 197,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 196,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 195,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 194,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 192,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 191,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 190,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 189,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 188,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 187,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 186,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 185,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 184,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 183,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 182,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 181,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 180,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 179,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 178,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 177,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 176,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 175,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 174,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 173,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 172,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 171,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 170,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 169,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 168,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 167,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 166,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 165,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 164,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 163,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 162,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 161,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 160,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 159,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 158,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 157,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 156,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 155,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\r\n    },\r\n    token: tokens.yfii,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 154,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 153,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 152,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 151,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 150,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 149,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 148,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 147,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 146,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 145,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 144,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 143,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 142,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x473390697036E7611a670575eA9141583471fF47',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 141,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 140,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * All farms below here are from v1 and are to be set to 0x\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 136,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 76,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 135,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 134,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 133,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 132,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 131,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 130,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 129,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 128,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 127,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 125,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 124,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 123,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 122,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 121,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 120,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 119,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 118,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 117,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 116,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 115,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 114,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 113,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 112,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 111,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 110,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 109,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 108,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 107,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 106,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 104,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 103,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 102,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 101,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 100,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 99,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 98,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 97,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 96,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 95,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 94,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 93,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 92,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 91,\r\n    lpSymbol: 'NULS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 90,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 89,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 88,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 87,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 86,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 85,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 84,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 83,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 82,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 81,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 80,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 79,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 78,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 77,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 75,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 74,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 73,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 72,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 71,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 70,\r\n    lpSymbol: 'BETH-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\r\n    },\r\n    token: tokens.beth,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 69,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 68,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 67,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 66,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 65,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 63,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 62,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 61,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 60,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 59,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 58,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 57,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 56,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 55,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 54,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 53,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 52,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 51,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 50,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 49,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 46,\r\n    lpSymbol: 'OG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\r\n    },\r\n    token: tokens.og,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 47,\r\n    lpSymbol: 'ASR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\r\n    },\r\n    token: tokens.asr,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 48,\r\n    lpSymbol: 'ATM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\r\n    },\r\n    token: tokens.atm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 45,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 44,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 43,\r\n    lpSymbol: 'JUV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\r\n    },\r\n    token: tokens.juv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 42,\r\n    lpSymbol: 'PSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\r\n    },\r\n    token: tokens.psg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 41,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 40,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 37,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\r\n    },\r\n    token: tokens.yfii,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'DAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'XTZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\r\n    },\r\n    token: tokens.xtz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'BCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\r\n    },\r\n    token: tokens.bch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'USDC-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'STAX-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\r\n    },\r\n    token: tokens.stax,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'NAR-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\r\n    },\r\n    token: tokens.nar,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'NYA-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\r\n    },\r\n    token: tokens.nya,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'bROOBEE-CAKE LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BAKE-BNB Bakery LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\r\n    },\r\n    token: tokens.bake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BURGER-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\r\n    },\r\n    token: tokens.burger,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\r\n    },\r\n    token: tokens.bake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n"],"sourceRoot":""}